{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/angular-material.module.ts","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/header/header.component.ts","webpack:///src/app/header/header.component.html","webpack:///src/app/home/welcome.component.ts","webpack:///src/app/home/welcome.component.html","webpack:///src/app/login/login.component.ts","webpack:///src/app/login/login.component.html","webpack:///src/app/shared/auth.interceptor.ts","webpack:///src/app/shared/authentication.service.ts","webpack:///src/app/shared/dateConverter.ts","webpack:///src/app/shared/numberRange-validators.ts","webpack:///src/app/shared/star.component.ts","webpack:///src/app/shared/star.component.html","webpack:///src/app/shared/student-edit.guard.ts","webpack:///src/app/shared/student.guard.ts","webpack:///src/app/student/student-crud.component.ts","webpack:///src/app/student/student-crud.component.html","webpack:///src/app/student/student-details.component.ts","webpack:///src/app/student/student-details.component.html","webpack:///src/app/student/student-details.service.ts","webpack:///src/app/student/student-list.component.ts","webpack:///src/app/student/student-list.component.html","webpack:///src/app/student/student-list.service.ts","webpack:///src/app/student/student.service.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","AngularMaterialModule","imports","providers","routes","path","component","canDeactivate","canActivate","redirectTo","pathMatch","AppRoutingModule","forRoot","useHash","AppComponent","title","pageTitle","selector","templateUrl","styleUrls","AppModule","provide","useClass","multi","declarations","bootstrap","HeaderComponent","loginService","WelcomeComponent","router","route","formBuilder","loginservice","welcomePageTitle","isSubmitted","loading","username","password","invalidLogin","loginForm","group","required","returnUrl","snapshot","queryParams","authenticate","value","subscribe","data","navigate","error","message","controls","checkLogin","LoginComponent","AuthInterceptor","request","next","console","log","token","clone","headers","set","has","handle","pipe","event","User","status","AuthenticationService","httpClient","login","body","url","JSON","stringify","post","userData","sessionStorage","setItem","tokenStr","user","getItem","removeItem","providedIn","DateConverter","character","name","NumberRangeValidators","min","max","c","isNaN","StarComponent","ratingClicked","starWidth","rating","emit","onClick","StudentEditGuard","studentForm","dirty","studentName","get","confirm","StudentGuard","state","alert","confirmFees","fees","fee","reFees","pristine","emailMatcher","emailControl","confirmControl","match","StudentCRUDComponent","fb","studentAPIService","submitted","isDeleted","studentAddConfirmation","validationMessages","email","setFormValues","valueChanges","val","onRadioClick","setMessage","sub","paramMap","params","getStudent","getStudentbyID","student","displayStudent","err","errorMessage","reset","studentId","patchValue","studentStandard","studentDOJ","studentDOB","studentRating","unsubscribe","minLength","emailGroup","confirmEmail","validator","phone","notification","feeGroup","range","s","addStudents","res","update","onSaveComplete","confirmEmailControl","emailGroupControl","phoneControl","setValidators","isPhone","clearValidators","updateValueAndValidity","touched","errors","Object","map","key","join","deleteById","save","addStudentForm","deleteProduct","StudentDetailsComponent","studentApiService","studentDetailsService","imageUrl","studentDetails","StudentDetailsService","http","urlProvider","jwtheader","handleError","ErrorEvent","StudentListComponent","studentService","showImage","imageWidth","imageMargin","_listFilter","isStudentNotPresent","listFilter","filterBy","toLocaleLowerCase","students","filter","indexOf","getStudentsList","length","arraySize","filteredStudents","performFilter","StudentService","StudentAPIService","initializedStudentObject","put","environment","production","bootstrapModule"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { MatTableModule } from '@angular/material/table';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatButtonModule } from '@angular/material/button';\n\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\n//import {MatCheckboxModule} from '@angular/material';\n\n\nimport {MatAutocompleteModule} from '@angular/material/autocomplete';\nimport {MatDatepickerModule} from '@angular/material/datepicker';\n\nimport {MatRadioModule} from '@angular/material/radio';\nimport {MatSelectModule} from '@angular/material/select';\nimport {MatSliderModule} from '@angular/material/slider';\nimport {MatSlideToggleModule} from '@angular/material/slide-toggle';\nimport {MatMenuModule} from '@angular/material/menu';\nimport {MatSidenavModule} from '@angular/material/sidenav';\nimport {MatToolbarModule} from '@angular/material/toolbar';\nimport {MatListModule} from '@angular/material/list';\nimport {MatGridListModule} from '@angular/material/grid-list';\nimport {MatCardModule} from '@angular/material/card';\nimport {MatStepperModule} from '@angular/material/stepper';\nimport {MatTabsModule} from '@angular/material/tabs';\nimport {MatExpansionModule} from '@angular/material/expansion';\nimport {MatButtonToggleModule} from '@angular/material/button-toggle';\nimport {MatChipsModule} from '@angular/material/chips';\nimport {MatIconModule} from '@angular/material/icon';\nimport {MatProgressSpinnerModule} from '@angular/material/progress-spinner';\nimport {MatProgressBarModule} from '@angular/material/progress-bar';\nimport {MatDialogModule} from '@angular/material/dialog';\nimport {MatTooltipModule} from '@angular/material/tooltip';\nimport {MatSnackBarModule} from '@angular/material/snack-bar';\n\nimport {MatSortModule} from '@angular/material/sort';\nimport {MatPaginatorModule} from '@angular/material/paginator';\n\n@NgModule({\n   imports: [\n    MatCardModule, \n    MatDialogModule, \n    MatMenuModule,\n    MatProgressSpinnerModule,\n      CommonModule,\n      MatButtonModule,\n      MatToolbarModule,\n      MatIconModule,\n      MatSidenavModule,\n     \n      MatListModule,\n      MatGridListModule,\n      MatFormFieldModule,\n      MatInputModule,\n      MatSelectModule,\n      MatRadioModule,\n      MatDatepickerModule,\n     \n      MatChipsModule,\n      MatTooltipModule,\n      MatTableModule,\n      MatPaginatorModule\n   ],\n   exports: [\n    MatCardModule, \n    MatDialogModule, \n    MatMenuModule,\n    MatProgressSpinnerModule,\n      MatButtonModule,\n      MatToolbarModule,\n      MatIconModule,\n      MatSidenavModule,\n      \n      MatListModule,\n      MatGridListModule,\n      MatInputModule,\n      MatFormFieldModule,\n      MatSelectModule,\n      MatRadioModule,\n      MatDatepickerModule,\n      MatChipsModule,\n      MatTooltipModule,\n      MatTableModule,\n      MatPaginatorModule\n   ],\n   providers: [\n      MatDatepickerModule,\n   ]\n})\n\nexport class AngularMaterialModule { }","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { StudentDetailsComponent } from './student/student-details.component';\nimport { LoginComponent } from './login/login.component';\nimport { StudentCRUDComponent } from './student/student-crud.component';\nimport { StudentListComponent } from './student/student-list.component';\nimport { WelcomeComponent } from './home/welcome.component';\nimport { StarComponent } from './shared/star.component';\nimport { StudentGuard } from './shared/student.guard';\nimport {StudentEditGuard} from './shared/student-edit.guard'\nimport { AuthInterceptor } from './shared/auth.interceptor';\nimport {AppComponent} from './app.component'\nconst routes: Routes = [\n\n    {path:'studentList' , component: StudentListComponent},\n      {path :'student/:id/edit',canDeactivate: [StudentEditGuard] ,component:StudentCRUDComponent},\n      { path:'student/:id' , canActivate: [StudentGuard] ,component:StudentDetailsComponent},\n      {path:'login', component:LoginComponent},\n      {path:'home', component:AppComponent},\n      { path: 'welcome', component: WelcomeComponent },\n      { path: '', redirectTo: 'welcome', pathMatch: 'full' },\n      { path: '**', redirectTo: 'welcome', pathMatch: 'full' }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes,{ useHash: true })],\n  exports: [RouterModule]\n})\n\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'Coaching-Portal';\n  pageTitle : string ='Hello World..!!!';\n  \n  \n}\n","<!--<nav class='navbar navbar-expand navbar-light bg-light'>\n  <a class='navbar-brand'>{{pageTitle}}</a>-->\n\n  <app-header></app-header>\n<router-outlet></router-outlet>\n\n <!-- <ul class='nav nav-pills' *ngIf='false'>\n    <li><a class='nav-link' routerLinkActive='active' [routerLink]=\"['/welcome']\">Home</a></li>\n    <li><a class='nav-link' routerLinkActive='active' [routerLink]=\"['/studentList']\">Student List</a></li>\n    <li><a class='nav-link' routerLinkActive='active' [routerLink]=\"['/saveStudent']\">Save Student</a></li>\n   \n  </ul>\n  </nav>-->\n ","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport {FormsModule,ReactiveFormsModule} from '@angular/forms';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { StudentListComponent } from './student/student-list.component';\nimport { RouterModule } from '@angular/router';\nimport { WelcomeComponent } from './home/welcome.component';\nimport { StarComponent } from './shared/star.component';\nimport { StudentGuard } from './shared/student.guard';\nimport { AuthInterceptor } from './shared/auth.interceptor';\nimport {HttpClientModule,HTTP_INTERCEPTORS} from '@angular/common/http';\nimport { StudentDetailsComponent } from './student/student-details.component';\nimport { LoginComponent } from './login/login.component';\nimport { StudentCRUDComponent } from './student/student-crud.component';\nimport {DateConverter} from './shared/dateConverter';\nimport {HeaderComponent} from './header/header.component';\nimport { AngularMaterialModule } from './angular-material.module';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { HashLocationStrategy, LocationStrategy } from '@angular/common';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    StarComponent,\n    WelcomeComponent,\n   StudentDetailsComponent,\n   StudentListComponent,\n  StudentCRUDComponent,\n  LoginComponent,\n  DateConverter,\n  HeaderComponent\n    \n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    ReactiveFormsModule,\n    RouterModule,\n    AppRoutingModule,\n    HttpClientModule,\n    AngularMaterialModule,\n    BrowserAnimationsModule\n  ],\n  providers: [ \n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: AuthInterceptor,\n      multi: true\n    },\n     {provide: LocationStrategy, useClass: HashLocationStrategy}\n    ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { AuthenticationService } from '../shared/authentication.service';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.css']\n})\nexport class HeaderComponent implements OnInit {\n\n  constructor(public loginService:AuthenticationService){ }\n  ngOnInit() {\n  }\n\n}\n","<mat-toolbar color=\"primary\">\n    <mat-toolbar-row>\n        <span>Coaching App  </span>\n        <span class=\"example-fill-remaining-space\"></span>\n        <span class=\"align-center\"></span>\n        <span class=\"example-spacer\"></span>\n        <ul class='nav nav-pills' *ngIf='true'>\n        <!--<a mat-button *ngIf=\"!loginService.isUserLoggedIn()\" routerLink=\"/login\" class=\"nav-link\">Login</a>-->\n        <li><a mat-button class='nav-link' routerLinkActive='active' [routerLink]=\"['/welcome']\">Home</a></li>\n        <li><a mat-button class='nav-link' routerLinkActive='active' [routerLink]=\"['/studentList']\">Student List</a></li>\n        <li><a mat-button class='nav-link' routerLinkActive='active' [routerLink]=\"['/student','0','edit']\">Add Student</a></li>\n\n</ul>\n    </mat-toolbar-row>\n</mat-toolbar>","import { Component,Input } from '@angular/core';\nimport {Router,ActivatedRoute} from '@angular/router';\nimport { FormBuilder, FormGroup, Validators } from  '@angular/forms';\n\nimport { AuthenticationService } from '../shared/authentication.service';\n\n@Component({\nselector:'app-start',\ntemplateUrl: './welcome.component.html'\n})\n\nexport class WelcomeComponent {\nwelcomePageTitle: string='Welcome to the coaching portal';\nloginForm: FormGroup;\n  isSubmitted  =  false;\n\n  constructor(\n    private router: Router, \n    private route:ActivatedRoute,\n   private formBuilder: FormBuilder, \n   private loginservice: AuthenticationService\n   ) { }\n\npageTitle: string='Welcome Rachit to the coaching portal'\n    loading = false;\n     returnUrl: string;\n username = ''\n  password = ''\n  invalidLogin = false\n  \n  @Input() error: string | null;\n\nget formControls() { return this.loginForm.controls; }\n\n  ngOnInit() {\n  this.loginForm  =  this.formBuilder.group({\n        username: ['', Validators.required],\n        password: ['', Validators.required]\n    }); \n    this.returnUrl = this.route.snapshot.queryParams['welcome'] || '/';\n  }\n\n  checkLogin() {\n    (this.loginservice.authenticate(this.loginForm.value).subscribe(\n      data => {\n        this.router.navigate([''])\n        this.invalidLogin = false\n      },\n      error => {\n        this.invalidLogin = true\n        this.error = error.message;\n\n      }\n    )\n    );\n\n  }\n}\n","\n<div class=\"card\">\n  <div class=\"card-header\">\n    {{pageTitle}}\n  </div>\n\n  <div class=\"card-body\">\n\n    <div class=\"container-fluid\">\n      <div class=\"text-center\">\n        <img src=\"./assets/images/Rachit.png\"\n             class=\"img-responsive center-block\"\n             style=\"max-height:300px;padding-bottom:50px\" />\n      </div>\n\n      <div class=\"text-center\">Developed by:</div>\n      <div class=\"text-center\">\n        <h3>Rachit Mundhada</h3>\n      </div>\n\n      <div class=\"text-center\">rachitmundhada@gmail.com</div>\n      <div class=\"text-center\">\n        \n      </div>\n    </div>\n\n <form novalidate\n  [formGroup]=\"loginForm\">\n    <input type=\"text\" id=\"login\" class=\"form-control\" name=\"login\" placeholder=\"login\" formControlName=\"username\"><br>\n    <input type=\"text\" id=\"password\" class=\"form-control\" name=\"login\" placeholder=\"password\" formControlName=\"password\">\n    <div class=\"form-group row mb-2\">\n      <div class=\"offset-md-2 col-md-4\">\n        <br>\n        <button class=\"btn btn-primary mr-3 login-button\"\n                type=\"submit\"\n                style=\"width:80px\"\n                [title]=\"loginForm.valid ? 'Save your entered data' : 'Disabled until the form data is valid'\"\n                [disabled]=\"!loginForm.valid\"\n               (click)=\"checkLogin()\"\n                >\n                \n          Login\n        </button>\n      </div>\n    </div>\n  </form>\n\n  <!-- Remind Passowrd \n  <div id=\"formFooter\">\n    <a class=\"underlineHover\" href=\"#\">Forgot Password?</a>\n  </div>-->\n  </div>\n \n  \n</div>","import { Component, OnInit, Input } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { AuthenticationService } from '../shared/authentication.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  username = ''\n  password = ''\n  invalidLogin = false\n  \n  @Input() error: string | null;\n\n  constructor(private router: Router,\n    private loginservice: AuthenticationService) { }\n\n  ngOnInit() {\n  }\n\n  checkLogin() {\n    (this.loginservice.authenticate(this.username).subscribe(\n      data => {\n        this.router.navigate([''])\n        this.invalidLogin = false\n      },\n      error => {\n        this.invalidLogin = true\n        this.error = error.message;\n\n      }\n    )\n    );\n\n  }\n\n}","\n<mat-card>\n    <mat-card-header>\n        <mat-card-title>Login</mat-card-title>\n    </mat-card-header>\n    <mat-card-content>\n        <form>\n            <table class=\"example-full-width\" cellspacing=\"0\">\n                <tr>\n                    <td>\n                        <mat-form-field class=\"example-full-width\">\n                            <input matInput placeholder=\"Username\" [(ngModel)]=\"username\" name=\"username\" required>\n                        </mat-form-field>\n                    </td>\n                </tr>\n                <tr>\n                    <td>\n                        <mat-form-field class=\"example-full-width\">\n                            <input matInput placeholder=\"Password\" [(ngModel)]=\"password\" type=\"password\" name=\"password\" required>\n                        </mat-form-field>\n                    </td>\n                </tr>\n                <p *ngIf=\"error\" class=\"error\">\n                    {{ error }}\n                </p>\n            </table>\n        </form>\n       \n    </mat-card-content>\n    <mat-card-actions>\n        <button mat-raised-button (click)=\"checkLogin()\" color=\"primary\">Login</button>\n    </mat-card-actions>\n</mat-card>","import { Injectable } from \"@angular/core\";\r\nimport { tap } from \"rxjs/operators\";\r\nimport {\r\n  HttpRequest,\r\n  HttpHandler,\r\n  HttpEvent,\r\n  HttpInterceptor,\r\n  HttpResponse,\r\n  HttpErrorResponse\r\n} from \"@angular/common/http\";\r\n//import { Observable } from \"rxjs/Observable\";\r\nimport {Observable, throwError} from 'rxjs';\r\nimport { map, catchError } from 'rxjs/operators';\r\n\r\n@Injectable()\r\nexport class AuthInterceptor implements HttpInterceptor {\r\n  constructor() { }\r\nintercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n        //const token: string = localStorage.getItem('token');\r\n        console.log('Auth service called')\r\n        const token: string = 'eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhZG1pbiIsImV4cCI6MTU5NDY2MTkxMX0.970Hz2jSELM2CWqxA_6b57gJZdNQ5bxFPYHZSHLqUnHwbJUVDEMxbtUKt8utf_gsiRuKbRWr3cxMlUakV4-G1w';\r\n        \r\n        if (token) {\r\n            console.log('token inserted in the headers')\r\n            request = request.clone({ headers: request.headers.set('Authorization', token) });\r\n        }\r\n\r\n        if (!request.headers.has('Content-Type')) {\r\n            \r\n            request = request.clone({ headers: request.headers.set('Content-Type', 'application/json') });\r\n        }\r\n\r\n        request = request.clone({ headers: request.headers.set('Accept', 'application/json') });\r\n\r\n        return next.handle(request).pipe(\r\n            map((event: HttpEvent<any>) => {\r\n                if (event instanceof HttpResponse) {\r\n                    console.log('event--->>>', event);\r\n                }\r\n                return event;\r\n            }));\r\n    }\r\n\r\n\r\n\r\n}","import { Injectable } from \"@angular/core\";\nimport { HttpClient, HttpHeaders } from \"@angular/common/http\";\nimport { map } from \"rxjs/operators\";\n\nexport class User {\n  constructor(public status: string) {}\n}\n\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AuthenticationService {\n  constructor(private httpClient: HttpClient) {}\n// Provide username and password for authentication, and once authentication is successful, \n//store JWT token in session\n  authenticate(login) {\n    const body=[];\n    const url='http://localhost:8080/StubProject/login';\n    console.log('Before hitting for the login service -'+ JSON.stringify(login))\n    return this.httpClient\n      .post<any>(url, { login})\n      .pipe(\n        map(userData => {\n          sessionStorage.setItem(\"username\", login);\n          let tokenStr = \"Bearer \" + userData.token;\n          sessionStorage.setItem(\"token\", tokenStr);\n          return userData;\n        })\n      );\n  }\n\n  isUserLoggedIn() {\n    let user = sessionStorage.getItem(\"username\");\n   \n    return !(user === null);\n  }\n\n  logOut() {\n    sessionStorage.removeItem(\"username\");\n  }\n}\n","import {Pipe, PipeTransform} from '@angular/core'; \r\n\r\n@Pipe({\r\n    name:'dateConverter'\r\n})\r\n\r\nexport class DateConverter implements PipeTransform{\r\n\r\n    transform(value:string, character:string) :string {\r\n        return '';\r\n    }\r\n\r\n}","import {AbstractControl, ValidatorFn} from '@angular/forms'\r\n\r\nexport class NumberRangeValidators{\r\n\r\n    static range(min:number , max: number): ValidatorFn{\r\n\r\n        return (c:AbstractControl) :{[key: string]: boolean }| null=>{\r\n            if (c.value && (isNaN(c.value) || c.value < min || c.value > max)){\r\n                return {'range': true};\r\n            }\r\n            else\r\n            return null;\r\n        }\r\n    }\r\n}","import { Component, OnChanges, Input, EventEmitter, Output } from '@angular/core';\r\n\r\n@Component({\r\n    selector:'pm-star',\r\n    templateUrl:'./star.component.html',\r\n    styleUrls:['./star.component.css']\r\n})\r\nexport class StarComponent implements OnChanges{\r\n    ngOnChanges(): void {\r\n        this.starWidth=this.rating*75/5;\r\n    }\r\n  @Output()  ratingClicked: EventEmitter<string>=\r\n    new EventEmitter<string>();\r\n\r\n@Input() rating: number;\r\n\r\nstarWidth: number;\r\n\r\nonClick():void{\r\n    this.ratingClicked.emit(`The rating ${this.rating} was clicked!`);\r\n}\r\n\r\n\r\n\r\n}\r\n","<div class=\"crop\"\n     [style.width.px]=\"starWidth\"\n     [title]=\"rating\"\n     (click)=\"onClick()\">\n  <div style=\"width: 75px\">\n    <span class=\"fa fa-star\"></span>\n    <span class=\"fa fa-star\"></span>\n    <span class=\"fa fa-star\"></span>\n    <span class=\"fa fa-star\"></span>\n    <span class=\"fa fa-star\"></span>\n  </div>\n</div>","import { Injectable } from '@angular/core';\nimport { CanDeactivate } from '@angular/router';\nimport { Observable } from 'rxjs';\n\nimport { StudentCRUDComponent } from '../Student/student-crud.component';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class StudentEditGuard implements CanDeactivate<StudentCRUDComponent> {\n  canDeactivate(component: StudentCRUDComponent): Observable<boolean> | Promise<boolean> | boolean {\n    console.log('In the deactivate method')\n    if (component.studentForm.dirty) {\n      console.log('In the deactivate method')\n      const studentName = component.studentForm.get('studentName').value || 'New Product';\n      return confirm(`Navigate away and lose all changes to ${studentName}?`);\n    }\n    return true;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Router, CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree } from '@angular/router';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class StudentGuard implements CanActivate {\n  \n  constructor (private router:Router ){}\n  canActivate(\n    next: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\n    let id =+next.url[1].path;\n    if (isNaN(id) || id<1)\n    {\n        alert(\"Invalid Student id\");\n        this.router.navigate(['/studentList']);\n        return false;\n    }\n    return true;\n  }\n  \n}\n","import { Component, OnInit } from '@angular/core';\r\nimport {FormGroup, FormBuilder, Validators, AbstractControl, ValidatorFn} from '@angular/forms';\r\nimport {Student} from '../shared/studentDTO';\r\nimport { IStudents } from './students';;\r\nimport { NgForm } from '@angular/forms';\r\nimport{StudentAPIService} from './student.service';\r\nimport { debounceTime } from 'rxjs/operators';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { Observable, Subscription, fromEvent, merge } from 'rxjs';\r\nimport {NumberRangeValidators} from '../shared/numberRange-validators';\r\n\r\nfunction confirmFees(fees:AbstractControl): {[key:string]:boolean}|null {\r\n\r\n  const fee=fees.get('fees').value;\r\n  const reFees=fees.get('reFees').value;\r\n\r\n  \r\n  if ( fee!=null && reFees!=null && (fee.pristine || reFees.pristine)){\r\n    \r\n    return null;\r\n  }\r\n \r\n  if (fee===reFees)\r\n  {\r\n    \r\n    return null;\r\n  }\r\n  else{\r\n     \r\n  return {'match':true};\r\n  }\r\n  \r\n}\r\n\r\nfunction emailMatcher(c: AbstractControl): { [key: string]: boolean } | null {\r\n  const emailControl = c.get('email');\r\n  const confirmControl = c.get('confirmEmail');\r\n\r\n  if (emailControl.pristine || confirmControl.pristine) {\r\n    return null;\r\n  }\r\n\r\n  if (emailControl.value === confirmControl.value) {\r\n    return null;\r\n  }\r\n  return { match: true };\r\n}\r\n\r\n@Component({\r\nselector: 'app-student-crud',\r\ntemplateUrl: './student-crud.component.html',\r\nstyleUrls: ['./student-crud.component.css']\r\n})\r\nexport class StudentCRUDComponent implements OnInit {\r\n\r\nconstructor(\r\nprivate fb:FormBuilder, \r\nprivate studentAPIService:StudentAPIService,\r\nprivate router: ActivatedRoute,\r\nprivate route: Router \r\n\r\n) {\r\n}\r\n\r\nstudentForm: FormGroup;\r\nstudent:IStudents;\r\nsubmitted:boolean = false; \r\nerrorMessage: string;\r\nisPhone:boolean;\r\nprivate sub: Subscription;\r\npageTitle='';\r\nisDeleted=false;\r\nstudentAddConfirmation='Student Added SuccessFully!';\r\n\r\n\r\n private validationMessages = {\r\n    required: 'Please enter your email address.',\r\n    email: 'Please enter a valid email address.'\r\n  };\r\n\r\n\r\n  ngOnInit(): void {\r\n    this.setFormValues();\r\n    this.studentForm.get('notification').valueChanges.subscribe(\r\n      val=> this.onRadioClick(val)\r\n    );\r\n\r\n     //this.onRadioClick(this.studentForm.get('notification').value);\r\n    const emailControl=this.studentForm.get('emailGroup.email');\r\n    emailControl.valueChanges.pipe(debounceTime(1000)).subscribe(\r\n      value=>this.setMessage(emailControl),\r\n    )\r\n\r\n    this.sub=this.router.paramMap.subscribe(\r\n      params=>{\r\n        const id=+   params.get('id');\r\n        this.getStudent(id);\r\n      }\r\n\r\n    )\r\n  }\r\n\r\n  getStudent(id:number): void{\r\n      this.studentAPIService.getStudentbyID(id).subscribe({\r\n        next:(student: IStudents)=> this.displayStudent(student),\r\n       error: err => this.errorMessage = err\r\n      })\r\n  }\r\n\r\n\r\n\r\ndisplayStudent(student:IStudents){\r\n  if (this.studentForm){\r\n    this.studentForm.reset;\r\n  }\r\n\r\n  this.student= student;\r\n  if (this.student.studentId === 0){\r\n    this.pageTitle='Enter Students Details to Save...';\r\n\r\n  }\r\n  else {\r\n  this.pageTitle='Edit Students Details...';\r\n  }\r\n  // Need to add the details...\r\n  this.studentForm.patchValue({\r\n    studentName: this.student.studentName,\r\n    studentStandard:this.student.studentStandard,\r\n    studentDOJ:this.student.studentDOJ,\r\n    studentDOB: this.student.studentDOB,\r\n    studentRating: this.student.studentRating,\r\n    //feeGroup: this.student.feeGroup\r\n   \r\n  });\r\n //this.studentForm.setControl('emailGroup', this.fb.array(this.student.emailGroup || []));\r\n}\r\n\r\n  ngOnDestroy():void{\r\n   \r\n    this.sub.unsubscribe();\r\n  }\r\n  \r\n  setFormValues(){\r\n      this.studentForm=this.fb.group({\r\n      studentName:['', [Validators.required, Validators.minLength(3)]],\r\n      studentStandard:['', [Validators.required, Validators.minLength(1)]],\r\n      studentDOJ:['', [Validators.required, Validators.minLength(8)]],\r\n      studentDOB:['', [Validators.required, Validators.minLength(8)]],\r\n      emailGroup: this.fb.group({\r\n        email: [''],\r\n        confirmEmail: [''],\r\n      },{validator: emailMatcher}),\r\n      phone: '',\r\n      notification:'email',\r\n      feeGroup: this.fb.group({\r\n      fees:['', [Validators.required, Validators.minLength(2)]],\r\n      reFees:['', [Validators.required, Validators.minLength(2)]]\r\n      },{ validator:confirmFees }),\r\n      studentRating:['', [NumberRangeValidators.range(1,5)]]\r\n    })\r\n    }\r\n\r\n  save() {\r\n    console.log('Saved: ' + JSON.stringify(this.studentForm.value));\r\n    if (this.studentForm){\r\n      if (this.studentForm.dirty){\r\n        const s= {...this.student, ...this.studentForm.value};\r\n        if (s.studentId===0){\r\n            this.studentAPIService.addStudents(s)\r\n            .subscribe(res => {\r\n              this.submitted = true; \r\n              this.studentForm.reset();  \r\n              }, (err) => {\r\n              console.log(err);\r\n                 });\r\n        }\r\n        else{\r\n          console.log('In the update method calling the service...'+ JSON.stringify(s))\r\n              this.studentAPIService.update(s).subscribe({\r\n                next: () => this.onSaveComplete(),\r\n              error: err => this.errorMessage = err\r\n              })\r\n        }\r\n      }\r\n      else {\r\n        this.onSaveComplete();\r\n      }\r\n    }\r\n    else {\r\n      this.errorMessage = 'Please correct the validation errors.';\r\n    }\r\n  }\r\n\r\n  addStudentForm(){  \r\n    this.submitted=false;  \r\n    this.studentForm.reset();  \r\n  }\r\n\r\n  onRadioClick(value:string): void {\r\n    \r\n    \r\n    const emailControl=this.studentForm.get('emailGroup.email');\r\n    const confirmEmailControl=this.studentForm.get('emailGroup.confirmEmail');\r\n    const emailGroupControl=this.studentForm.get('emailGroup');\r\n    const phoneControl=this.studentForm.get('phone');\r\n    if (value=== 'text'){\r\n        phoneControl.setValidators(Validators.required)\r\n       \r\n        this.isPhone=true;\r\n        emailControl.clearValidators();\r\n         emailGroupControl.clearValidators();\r\n         confirmEmailControl.clearValidators();\r\n    }\r\n    else {\r\n      phoneControl.clearValidators();\r\n      emailControl.setValidators([Validators.required, Validators.email]);\r\n      confirmEmailControl.setValidators(Validators.required)\r\n     \r\n      this.isPhone=false;\r\n    }\r\n    emailControl.updateValueAndValidity();\r\n    phoneControl.updateValueAndValidity();\r\n    emailGroupControl.updateValueAndValidity();\r\n    confirmEmailControl.updateValueAndValidity();\r\n  }\r\n\r\n setMessage(c: AbstractControl): void {\r\n    this.errorMessage = '';\r\n    \r\n    if ((c.touched || c.dirty) && c.errors) {\r\n     \r\n      this.errorMessage = Object.keys(c.errors).map(\r\n        key => this.validationMessages[key]).join(' ');\r\n    }\r\n  }\r\n\r\ndeleteProduct(){\r\n if (this.student.studentId===0) {\r\n   this.onSaveComplete();\r\n }\r\n else{\r\n   if (confirm(`Please confirm to delete student ${this.studentForm.get('studentName').value}`)){\r\n     this.studentAPIService.deleteById(this.student.studentId).subscribe({\r\n       next:(data)=>{this.onSaveComplete()\r\n       this.isDeleted=true;\r\n       },\r\n       error: err=> this.errorMessage =err\r\n     });\r\n   }\r\n }\r\n}\r\n\r\nonSaveComplete(): void {\r\n    // Reset the form to clear the flags\r\n    this.studentForm.reset();\r\n    this.route.navigate(['/studentList']);\r\n  }\r\n}\r\n","<div class=\"card\">\n    <div class=\"card-header\">\n      {{pageTitle}}<span [hidden]=!submitted> <h4>{{studentAddConfirmation}}</h4>  </span>\n    </div>\n  \n    <div class=\"card-body\">\n      <form novalidate\n            [formGroup]=\"studentForm\"\n           >\n  \n        <div class=\"form-group row mb-2\">\n          <label class=\"col-md-2 col-form-label\"\n                 for=\"firstNameId\">Name</label>\n          <div class=\"col-md-8\">\n            <input class=\"form-control\"\n                   id=\"firstNameId\"\n                   type=\"text\"\n                   placeholder=\" Name (required)\"\n                  formControlName=\"studentName\"\n                  [ngClass]=\"{'is-invalid': (studentForm.get('studentName').touched || studentForm.get('studentName').dirty) && !studentForm.get('studentName').valid }\" />\n               \n            <span class=\"invalid-feedback\">\n              <span *ngIf=\"studentForm.get('studentName').errors?.required\">\n                Please enter your first name.\n              </span>\n              <span *ngIf=\"studentForm.get('studentName').errors?.minlength\">\n                The first name must be longer than 3 characters.\n              </span>\n            </span>\n          </div>\n        </div>\n  \n        <div class=\"form-group row mb-2\">\n          <label class=\"col-md-2 col-form-label\"\n                 for=\"standard\">Standard</label>\n          <div class=\"col-md-8\">\n            <input class=\"form-control\"\n                   id=\"standard\"\n                   type=\"text\"\n                   placeholder=\"Class (required)\"\n                formControlName=\"studentStandard\"\n                   [ngClass]=\"{'is-invalid': (studentForm.get('studentStandard').touched || studentForm.get('studentStandard').dirty) && !studentForm.get('studentStandard').valid }\" />\n            <span class=\"invalid-feedback\">\n              <span *ngIf=\"studentForm.get('studentStandard').errors?.required\">\n                Please enter class.\n              </span>\n              <span *ngIf=\"studentForm.get('studentStandard').errors?.minLength\">\n                The class must be more than 01 characters.\n              </span>\n            </span>\n          </div>\n        </div>\n  \n\n        <div class=\"form-group row mb-2\">\n          <label class=\"col-md-2 col-form-label\"\n                 for=\"DOJ\">DOJ</label>\n          <div class=\"col-md-8\">\n            <input class=\"form-control\"\n                   id=\"DOJ\"\n                   type=\"text\"\n                   placeholder=\"DOJ (required)\"\n                formControlName=\"studentDOJ\"\n                   [ngClass]=\"{'is-invalid': (studentForm.get('studentDOJ').touched || studentForm.get('studentDOJ').dirty) && !studentForm.get('studentDOJ').valid }\" />\n            <span class=\"invalid-feedback\">\n              <span *ngIf=\"studentForm.get('studentDOJ').errors?.required\">\n                Please enter DOJ.\n              </span>\n              <span *ngIf=\"studentForm.get('studentDOJ').errors?.minLength\">\n                The class must be more than 01 characters.\n              </span>\n            </span>\n          </div>\n        </div>\n\n        <div class=\"form-group row mb-2\">\n          <label class=\"col-md-2 col-form-label\"\n                 for=\"DOB\">DOB</label>\n          <div class=\"col-md-8\">\n            <input class=\"form-control\"\n                   id=\"DOB\"\n                   type=\"text\"\n                   placeholder=\"DOB (required)\"\n                formControlName=\"studentDOB\"\n                   [ngClass]=\"{'is-invalid': (studentForm.get('studentDOB').touched || studentForm.get('studentDOB').dirty) && !studentForm.get('studentDOB').valid }\" />\n            <span class=\"invalid-feedback\">\n              <span *ngIf=\"studentForm.get('studentDOB').errors?.required\">\n                Please enter DOB.\n              </span>\n              <span *ngIf=\"studentForm.get('studentDOB').errors?.minLength\">\n                The class must be more than 01 characters.\n              </span>\n            </span>\n          </div>\n        </div>\n        \n      <div formGroupName=\"feeGroup\">\n       <div class=\"form-group row mb-2\">\n          <label class=\"col-md-2 col-form-label\"\n                 for=\"fees\">Fees</label>\n          <div class=\"col-md-8\">\n            <input class=\"form-control\"\n                   id=\"fees\"\n                   type=\"text\"\n                   placeholder=\"Fees (required)\"\n                formControlName=\"fees\"\n                   [ngClass]=\"{'is-invalid':studentForm.get('feeGroup').errors ||\n                   ((studentForm.get('feeGroup.fees').touched || \n                   studentForm.get('feeGroup.fees').dirty)\n                    && !studentForm.get('feeGroup.fees').valid) }\" />\n            <span class=\"invalid-feedback\">\n              <span *ngIf=\"studentForm.get('feeGroup.fees').errors?.required\">\n                Please enter fees.\n              </span>\n              <span *ngIf=\"studentForm.get('feeGroup.fees').errors?.minLength\">\n                The class must be more than 01 characters.\n              </span>\n            </span>\n          </div>\n        </div>\n\n        <div class=\"form-group row mb-2\">\n          <label class=\"col-md-2 col-form-label\"\n                 for=\"refees\">Re-enter Fees</label>\n          <div class=\"col-md-8\">\n            <input class=\"form-control\"\n                   id=\"refees\"\n                   type=\"text\"\n                   placeholder=\"Re-confirm Fees (required)\"\n                formControlName=\"reFees\"\n                   [ngClass]=\"{'is-invalid':studentForm.get('feeGroup').errors|| ((studentForm.get('feeGroup.reFees').touched\n                    || studentForm.get('feeGroup.reFees').dirty) \n                   && !studentForm.get('feeGroup.reFees').valid) }\" />\n            <span class=\"invalid-feedback\">\n              <span *ngIf=\"studentForm.get('feeGroup.reFees').errors?.required\">\n                Please enter fees.\n              </span>\n              <span *ngIf=\"studentForm.get('feeGroup').errors?.match\">\n                The confirmation fees does not match...\n              </span>\n            </span>\n          </div>\n        </div>\n      </div>\n\n      \n\n      <div class=\"form-group row mb-2\">\n        <label class=\"col-md-2 col-form-label pt-0\">Send Notifications</label>\n        <div class=\"col-md-8\">\n          <div class=\"form-check form-check-inline\">\n            <label class=\"form-check-label\">\n              <input class=\"form-check-input\"\n                     type=\"radio\"\n                     value=\"email\"\n                      checked\n                     formControlName=\"notification\">Email\n            </label>\n          </div>\n          <div class=\"form-check form-check-inline\">\n            <label class=\"form-check-label\">\n              <input class=\"form-check-input\"\n                     type=\"radio\"\n                     value=\"text\"\n                     formControlName=\"notification\">Text\n            </label>\n          </div>\n        </div>\n      </div>\n\n      <div formGroupName=\"emailGroup\" *ngIf=\"!isPhone\">\n        <div class=\"form-group row mb-2\">\n          <label class=\"col-md-2 col-form-label\"\n                 for=\"emailId\">Email</label>\n          <div class=\"col-md-8\">\n            <input class=\"form-control\"\n                   id=\"emailId\"\n                   type=\"email\"\n                   placeholder=\"Email (required)\"\n                   formControlName=\"email\"\n                   [ngClass]=\"{'is-invalid': errorMessage }\" />\n            <span class=\"invalid-feedback\">\n              {{ errorMessage }}\n            </span>\n          </div>\n        </div>\n\n        <div class=\"form-group row mb-2\">\n          <label class=\"col-md-2 col-form-label\"\n                 for=\"confirmEmailId\">Confirm Email</label>\n          <div class=\"col-md-8\">\n            <input class=\"form-control\"\n                   id=\"confirmEmailId\"\n                   type=\"email\"\n                   placeholder=\"Confirm Email (required)\"\n                   formControlName=\"confirmEmail\"\n                   [ngClass]=\"{'is-invalid': studentForm.get('emailGroup').errors ||\n                                             ((studentForm.get('emailGroup.confirmEmail').touched || \n                                             studentForm.get('emailGroup.confirmEmail').dirty) && \n                                              !studentForm.get('emailGroup.confirmEmail').valid) }\" />\n            <span class=\"invalid-feedback\">\n              <span *ngIf=\"studentForm.get('emailGroup.confirmEmail').errors?.required\">\n                Please confirm your email address.\n              </span>\n              <span *ngIf=\"studentForm.get('emailGroup').errors?.match\">\n                The confirmation does not match the email address.\n              </span>\n            </span>\n          </div>\n        </div>\n      </div>\n\n      <div class=\"form-group row mb-2\" *ngIf=\"isPhone\">\n        <label class=\"col-md-2 col-form-label\"\n               for=\"phoneId\">Phone</label>\n        <div class=\"col-md-8\">\n          <input class=\"form-control\"\n                 id=\"phoneId\"\n                 type=\"tel\"\n                 placeholder=\"Phone\"\n                 formControlName=\"phone\"\n                 [ngClass]=\"{'is-invalid': !studentForm.get('phone').valid }\" />\n          <span class=\"invalid-feedback\">\n            <span *ngIf=\"studentForm.get('phone').errors?.required\">\n              Please enter your phone number.\n            </span>\n          </span>\n        </div>\n      </div>\n\n\n\n        <div class=\"form-group row mb-2\">\n          <label class=\"col-md-2 col-form-label\"\n                 for=\"ratings\">Ratings</label>\n          <div class=\"col-md-8\">\n            <input class=\"form-control\"\n                   id=\"ratings\"\n                   type=\"text\"\n                   placeholder=\"Ratings (required)\"\n                formControlName=\"studentRating\"\n                   [ngClass]=\"{'is-invalid': (studentForm.get('studentRating').touched || studentForm.get('studentRating').dirty) \n                   && !studentForm.get('studentRating').valid }\" />\n            <span class=\"invalid-feedback\">\n              <span *ngIf=\"studentForm.get('studentRating').errors?.range\">\n                Please enter ratings between 1 and 5.\n              </span>\n            </span>\n          </div>\n        </div>\n\n        <div class=\"form-group row mb-2\">\n          <div class=\"offset-md-2 col-md-6\">\n            <button class=\"btn btn-primary mr-3\"\n                    type=\"submit\"\n                    style=\"width:80px\"\n                    [title]=\"studentForm.valid ? 'Save your entered data' : 'Disabled until the form data is valid'\"\n                    [disabled]=\"!studentForm.valid\"\n                   (click)=\"save()\"\n                    >\n                    \n              Save\n            </button>\n\n            <button class=\"btn btn-primary mr-3\"\n            type=\"clear\"\n            style=\"width:80px\"\n            (click)=\"addStudentForm()\"\n            >\n      Clear\n            </button>\n\n              <button class=\"btn btn-outline-warning\"\n                  style=\"width:80px\"\n                  type=\"button\"\n                  title=\"Delete this product\"\n                  (click)=\"deleteProduct()\">\n                  Delete\n                 </button>\n\n          </div>\n        </div>\n      </form>\n      <div class=\"row\">  \n        <div class=\"col-md-4\"></div>  \n        <div class=\"col-md-8\">  \n            <div [hidden]=\"!submitted\">  \n              \n               <button (click)=\"addStudentForm()\" class='btn btn-primary'>Add More Student</button>  \n            </div>   \n            <div [hidden]=\"isDeleted\">\n              <h1 *ngIf='isDeleted' style=\"color: red;\">No Details found...!!!</h1>\n              </div>     \n        </div> \n    </div>\n  </div>\n  <!--<br>Dirty: {{ studentForm.dirty }}\n  <br>Touched: {{ studentForm.touched }}\n  <br>Valid: {{ studentForm.valid }}\n  <br>Value: {{ studentForm.value | json }}-->","import { Component, OnInit } from '@angular/core';\nimport { IStudents } from './students';\nimport {Router,ActivatedRoute} from '@angular/router';\nimport {StudentAPIService} from './student.service';\nimport { StudentService } from './student-list.service';\nimport { StudentDetailsService } from './student-details.service';\n@Component({\n  selector: 'app-student-details',\n  templateUrl: './student-details.component.html',\n  styleUrls: ['./student-details.component.css']\n})\nexport class StudentDetailsComponent implements OnInit {\n\n  constructor(private studentApiService: StudentAPIService,private studentDetailsService: StudentDetailsService, private router: Router, private route: ActivatedRoute) { }\n\n  studentDetails:IStudents;\n  errorMessage:string;\n  pageTitle:string='Details for student';\n  imageUrl='./assets/images/Rachit.png';\n  isPhone;\n  ngOnInit() {\n    let id=+ this.route.snapshot.paramMap.get('id');\n    this.studentApiService.getStudentbyID(id).subscribe({\n      next: studentDetails=>{\n        this.studentDetails=studentDetails;\n        console.log('Rachit...'+ this.studentDetails.phone)\n        if (this.studentDetails.phone=== ''){\n          this.isPhone=false\n          console.log('Email is present');\n        }\n        else{\n        this.isPhone=true;\n         console.log('Phone is present')\n        }\n        console.log('Details received for student by id:-'+JSON.stringify(this.studentDetails));\n      },\n     error: err => this.errorMessage = err\n    });\n  }\n  onBack():void {\n    this.router.navigate(['/studentList'])\n  }\n\n}\n","<div class='card'\n     *ngIf='studentDetails'>\n  <div class='card-header'>\n    {{pageTitle + ': ' + studentDetails.studentName}}\n\n\n  <div class='card-body'>\n    <div class='row'>\n      <div class='col-md-6'>\n        <div class='row'>\n          <div class='col-md-4'>Name:</div>\n          <div class='col-md-8'>{{studentDetails.studentName}}</div>\n        </div>\n        <div class='row'>\n          <div class='col-md-4'>StudentId:</div>\n          <div class='col-md-8'>{{studentDetails.studentId }}</div>\n        </div>\n        <div class='row'>\n          <div class='col-md-4'>Fees:</div>\n          <div class='col-md-8'>{{studentDetails.feeGroup.fees| currency:\"INR\":\"symbol\"}}</div>\n        </div>\n        <div class='row'>\n          <div class='col-md-4'>StudentStandard:</div>\n          <div class='col-md-8'>{{studentDetails.studentStandard}}</div>\n        </div>\n        <div class='row'>\n          <div class='col-md-4'>StudentDOB:</div>\n          <div class='col-md-8'>{{studentDetails.studentDOB}}</div>\n        </div>\n        <div class='row'>\n          <div class='col-md-4'>StudentDOJ:</div>\n          <div class='col-md-8'>{{studentDetails.studentDOJ}}</div>\n        </div>\n        <div class='row' >\n          <div class='col-md-4'>StudentDetails:</div>\n          <div class='col-md-8'>{{isPhone? studentDetails.phone: studentDetails.emailGroup.email}}</div>\n        </div>\n        <div class='row'>\n          <div class='col-md-4'>StudentRatings:</div>\n          <div class='col-md-8'>\n          <pm-star [rating]='studentDetails.studentRating'>\n            </pm-star>\n          </div>\n        </div>\n      </div>\n\n      <div class='col-md-2'>\n        <img class='center-block img-responsive'\n             [style.width.px]='150'\n             [style.margin.px]='2'\n             [src]='imageUrl'\n             [title]='studentDetails.studentName'>\n      </div>\n     \n    </div>\n  </div>\n\n\n  <div class=\"row mt-4\">\n    <div class=\"col-md-4\">\n      <button class=\"btn btn-outline-secondary mr-3\"\n              style=\"width:80px\"\n              (click)=\"onBack()\">\n        <i class=\"fa fa-chevron-left\"></i> Back\n      </button>\n      <button class='btn btn-outline-secondary'\n    [routerLink]=\"['/student', studentDetails.studentId, 'edit']\"\n    style='width:80px'>\n<i class='fa fa-chevron-right'></i> Edit\n</button>\n    </div>\n  </div>\n  </div>","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpErrorResponse } from '@angular/common/http';\n\nimport { IStudents } from './students';\nimport {Observable, throwError} from 'rxjs';\nimport {catchError, tap} from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class StudentDetailsService {\n\n  constructor(private http: HttpClient) { }\n\n private  urlProvider:string='http://localhost:8080/students/getDetailsById/';\n private jwtheader='eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhZG1pbiIsImV4cCI6MTU5MjgxNTM0MH0.7f6i3Uw4VeUKutcmedGD_NUoA8rxCHpn7mIZ8gOEpBibrQ6-B6LxpbJRg4sL7Hx2nTSoEflncsn24JAHVFnd3A';\n  getStudentbyID(id:string): Observable<IStudents>{\n  \n // this.urlProvider=this.urlProvider+ id;\n   console.log('The final url :-'+ this.urlProvider);\n    //return this.http.get<IStudents>(this.urlProvider+id,{headers:{'Authorization':this.jwtheader}\n     return this.http.get<IStudents>(this.urlProvider+id).pipe(\n      tap(data=>console.log('The data received from backend server for the student fetch by Id srvc:- '+JSON.stringify(data))),\n      catchError(this.handleError)\n\n\n    );\n\n  }\n\n  private handleError(err: HttpErrorResponse) {\n    // in a real world app, we may send the server to some remote logging infrastructure\n    // instead of just logging it to the console\n    let errorMessage = '';\n    if (err.error instanceof ErrorEvent) {\n      // A client-side or network error occurred. Handle it accordingly.\n      errorMessage = `An error occurred: ${err.error.message}`;\n    } else {\n      // The backend returned an unsuccessful response code.\n      // The response body may contain clues as to what went wrong,\n      errorMessage = `Server returned code: ${err.status}, error message is: ${err.message}`;\n    }\n    console.error(errorMessage);\n    return throwError(errorMessage);\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport { IStudents } from './students';\nimport { StudentService } from './student-list.service';\nimport {StudentAPIService} from './student.service';\n\n@Component({\n  selector: 'app-student-list',\n  templateUrl: './student-list.component.html',\n  styleUrls: ['./student-list.component.css']\n})\nexport class StudentListComponent implements OnInit {\n\n  pageTitle:string='Students List';\n  showImage: boolean=true;\n  imageWidth = 50;\n  imageMargin = 2;\n  filteredStudents: IStudents[];\n  errorMessage:string;\n  _listFilter = '';\n   isStudentNotPresent:boolean=false;\n   arraySize:number;\n\n\n  get listFilter(): string {\n    return this._listFilter;\n  }\n  set listFilter(value: string) {\n    this._listFilter = value;\n    this.filteredStudents = this.listFilter ? this.performFilter(this.listFilter) : this.students;\n  \n  }\n\n  performFilter(filterBy: string): IStudents[] {\n    filterBy = filterBy.toLocaleLowerCase();\n    return this.students.filter((student: IStudents) =>\n    student.studentName.toLocaleLowerCase().indexOf(filterBy) !== -1);\n  }\n  students:IStudents[];\n  constructor(private studentApiService: StudentAPIService,private studentService: StudentService) {\n   \n    this.listFilter='';\n   \n  } \n\n\n  onRatingCicked(message:string):void\n  {\n      console.log(message);\n      \n    this.pageTitle = 'Rating clicked'+message;\n  }\n  toggleImage(): void{\n\n    \n    this.showImage=!this.showImage;\n   \n  }\n\n  \n\n  ngOnInit(): void {\n    this.studentApiService.getStudentsList().subscribe({\n      next: students => {\n        \n        if (students.length<1)\n        {\n          this.isStudentNotPresent=true;\n        }\n  console.log('The size of the array received :-'+this.arraySize);\n  \n        this.students = students;\n        this.filteredStudents = this.students;\n      },\n      error: err => this.errorMessage = err\n    });\n  }\n\n}\n","<div class=\"card\">\n    <div class=\"card-header\">\n        {{pageTitle}}\n    </div>\n    <div class=\"card-body\">\n        <div class=\"row\">\n          <div class=\"col-md-2\">  Filter By:</div> \n          <div class=\"col-md-4\"> <input type=\"text\" [(ngModel)]='listFilter'></div>\n        </div>\n        <br>\n        <div class=\"row\">\n                <div class=\"col-md-d6\">\n                  <h4>  Filtered By: {{_listFilter}}</h4>\n                </div>\n            </div> \n            <div class=\"table-responsive\">\n                <table class=\"table\" *ngIf='students && students.length'>\n                    <thead>\n                        <tr>\n                            <th><button class=\"btn btn-primary\" (click)='toggleImage()'> {{showImage ? 'Hide':'Show'}} Image</button></th>\n                            <th>Student Name</th>\n                            <th>Student DOB</th>\n                            <th>Student Class</th>\n                            <th>Student DOJ</th>\n                            <th>Student Fees</th>\n                            <th>Student Ratings</th>\n                        </tr>\n\n                           \n                    </thead>\n                    <tbody>\n                        <tr *ngFor='let student of filteredStudents'>\n                            <td>\n                                <img *ngIf=\"showImage && student.imageUrl\"\n                   [src]=\"student.imageUrl\"\n                   [title]=\"student.studentName\"\n                   [style.width.px]=\"imageWidth\"\n                   [style.margin.px]=\"imageMargin\">\n                            </td>\n                            <td><a [routerLink]=\"['/student',student.studentId]\">{{student.studentName}}</a></td>\n                            <td>{{student.studentDOB}}</td>\n                            <td>{{student.studentStandard}}</td>\n                            <td>{{student.studentDOJ}}</td>\n                            <td>{{student.fees }}</td>\n                            <td><pm-star [rating]='student.ratings'  (click)='onRatingCicked($event)'></pm-star></td>\n                            <td>\n                                <button class=\"btn btn-outline-primary btn-sm\"\n                                        [routerLink]=\"['/student', student.studentId, 'edit']\">\n                                  Edit\n                                </button>\n                              </td>\n                        </tr>\n\n                    </tbody>\n                </table>\n                <h1 *ngIf='isStudentNotPresent' style=\"color: red;\">No Details found...!!!</h1>\n                \n            </div> \n    </div>\n</div>\n","import { Injectable } from '@angular/core';\nimport { IStudents } from './students';\nimport { HttpClient, HttpErrorResponse } from '@angular/common/http';\nimport {Observable, throwError} from 'rxjs';\nimport {catchError, tap} from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class StudentService {\n\n  constructor(private http: HttpClient) { }\n\n\n  private urlProvider='http://localhost:8080/students/getAllDetails';\n  //private jwtheader='eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhZG1pbiIsImV4cCI6MTU5MjgxNTM0MH0.7f6i3Uw4VeUKutcmedGD_NUoA8rxCHpn7mIZ8gOEpBibrQ6-B6LxpbJRg4sL7Hx2nTSoEflncsn24JAHVFnd3A';\n  getStudentsList(): Observable<IStudents[]>{\n   // return this.http.get<IStudents[]>(this.urlProvider,{headers:{'Authorization':this.jwtheader}}).pipe(\n   return this.http.get<IStudents[]>(this.urlProvider).pipe(\n      tap(data=>console.log('The data received from backend server:- '+JSON.stringify(data))),\n      catchError(this.handleError)\n    );\n  }\n\n  private handleError(err: HttpErrorResponse) {\n    // in a real world app, we may send the server to some remote logging infrastructure\n    // instead of just logging it to the console\n    let errorMessage = '';\n    if (err.error instanceof ErrorEvent) {\n      // A client-side or network error occurred. Handle it accordingly.\n      errorMessage = `An error occurred: ${err.error.message}`;\n    } else {\n      // The backend returned an unsuccessful response code.\n      // The response body may contain clues as to what went wrong,\n      errorMessage = `Server returned code: ${err.status}, error message is: ${err.message}`;\n    }\n    console.error(errorMessage);\n    return throwError(errorMessage);\n  }\n    \n \n}\n","import { Injectable } from '@angular/core';\nimport { IStudents } from './students';\nimport { HttpClient, HttpErrorResponse, HttpHeaders } from '@angular/common/http';\nimport {Observable, throwError, of} from 'rxjs';\nimport {catchError, tap} from 'rxjs/operators';\n@Injectable({\n  providedIn: 'root'\n})\nexport class StudentAPIService {\n\n\n  constructor(private http:HttpClient) { }\n   private urlProvider='http://localhost:8080/StubProject/students/';\n \n  //private urlProvider='http://ec2-13-127-187-209.ap-south-1.compute.amazonaws.com:8080/StubProject/students/';\n \n  addStudents (student): Observable<IStudents> {\n    const url= this.urlProvider+'saveStudent';\n    console.log('Final data to be send :-'+ JSON.stringify(student))\n     return this.http.post<IStudents>(url,student).pipe(\n    tap((student: IStudents) => console.log(`Student Name added ${student.studentId}`)),\n     catchError(this.handleError)\n  );\n}\n\n  getStudentbyID(id:any): Observable<IStudents>{\n\n    if (id=== 0){\n      console.log('Id is 0 returning empty object'+ JSON.stringify(this.initializedStudentObject()))\n      return of (this.initializedStudentObject())\n    }\n  const url= `${this.urlProvider}getDetailsById/${id}`;\n // this.urlProvider=this.urlProvider+ id;\n   console.log('The final url :-'+ url);\n    //return this.http.get<IStudents>(this.urlProvider+id,{headers:{'Authorization':this.jwtheader}\n     return this.http.get<IStudents>(url).pipe(\n      tap(data=>console.log('The data received from backend server for the student fetch by Id srvc:- '+JSON.stringify(data))),\n      catchError(this.handleError)\n\n\n    );\n\n  }\n\n  getStudentsList(): Observable<IStudents[]>{\n   // return this.http.get<IStudents[]>(this.urlProvider,{headers:{'Authorization':this.jwtheader}}).pipe(\n     const url =this.urlProvider+'getAllDetails'\n   return this.http.get<IStudents[]>(url).pipe(\n      tap(data=>console.log('The data received from backend server:- '+JSON.stringify(data))),\n      catchError(this.handleError)\n    );\n  }\n\n   update (student): Observable<IStudents> {\n    const url= this.urlProvider+'updateStudent/'+student.studentId;\n    const headers = new HttpHeaders({ 'Content-Type': 'application/json' });\n    //console.log('Final data to be send :-'+ JSON.stringify(student))\n     return this.http.put<IStudents>(url,student,{ headers }).pipe(\n    tap((student: IStudents) => console.log(`Student Name added ${student.studentId}`)),\n     catchError(this.handleError)\n  );\n}\n\n deleteById(id): Observable<{}>{\n   const url =this.urlProvider+'deleteDetailsById/'+id;\n  return this.http.get<string>(url).pipe(\n    tap((data:string)=> console.log(data)),\n    catchError(this.handleError)\n  );\n}\n\n private handleError(err: HttpErrorResponse) {\n    // in a real world app, we may send the server to some remote logging infrastructure\n    // instead of just logging it to the console\n    let errorMessage = '';\n    if (err.error instanceof ErrorEvent) {\n      // A client-side or network error occurred. Handle it accordingly.\n      errorMessage = `An error occurred: ${err.error.message}`;\n    } else {\n      // The backend returned an unsuccessful response code.\n      // The response body may contain clues as to what went wrong,\n      errorMessage = `Server returned code: ${err.status}, error message is: ${err.message}`;\n    }\n    console.error(errorMessage);\n    return throwError(errorMessage);\n  }\n\n  initializedStudentObject(): IStudents{\n    return {\n      studentId:0,\n      studentName: null,\n      imageUrl:null,\n     studentDOB: null,\n     studentStandard:null,\n     studentDOJ:null,\n     feeGroup: null,\n     studentRating: null,\n      phone: null,\n      notification:null,\n      emailGroup:null\n    }\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}