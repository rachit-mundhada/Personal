{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/angular-material.module.ts","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/header/header.component.ts","./src/app/header/header.component.html","./src/app/home/welcome.component.ts","./src/app/home/welcome.component.html","./src/app/login/login.component.ts","./src/app/login/login.component.html","./src/app/shared/auth.interceptor.ts","./src/app/shared/authentication.service.ts","./src/app/shared/dateConverter.ts","./src/app/shared/numberRange-validators.ts","./src/app/shared/star.component.ts","./src/app/shared/star.component.html","./src/app/shared/student-edit.guard.ts","./src/app/shared/student.guard.ts","./src/app/student/student-crud.component.ts","./src/app/student/student-crud.component.html","./src/app/student/student-details.component.ts","./src/app/student/student-details.component.html","./src/app/student/student-details.service.ts","./src/app/student/student-list.component.ts","./src/app/student/student-list.component.html","./src/app/student/student-list.service.ts","./src/app/student/student.service.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { MatTableModule } from '@angular/material/table';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatButtonModule } from '@angular/material/button';\n\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\n//import {MatCheckboxModule} from '@angular/material';\n\n\nimport {MatAutocompleteModule} from '@angular/material/autocomplete';\nimport {MatDatepickerModule} from '@angular/material/datepicker';\n\nimport {MatRadioModule} from '@angular/material/radio';\nimport {MatSelectModule} from '@angular/material/select';\nimport {MatSliderModule} from '@angular/material/slider';\nimport {MatSlideToggleModule} from '@angular/material/slide-toggle';\nimport {MatMenuModule} from '@angular/material/menu';\nimport {MatSidenavModule} from '@angular/material/sidenav';\nimport {MatToolbarModule} from '@angular/material/toolbar';\nimport {MatListModule} from '@angular/material/list';\nimport {MatGridListModule} from '@angular/material/grid-list';\nimport {MatCardModule} from '@angular/material/card';\nimport {MatStepperModule} from '@angular/material/stepper';\nimport {MatTabsModule} from '@angular/material/tabs';\nimport {MatExpansionModule} from '@angular/material/expansion';\nimport {MatButtonToggleModule} from '@angular/material/button-toggle';\nimport {MatChipsModule} from '@angular/material/chips';\nimport {MatIconModule} from '@angular/material/icon';\nimport {MatProgressSpinnerModule} from '@angular/material/progress-spinner';\nimport {MatProgressBarModule} from '@angular/material/progress-bar';\nimport {MatDialogModule} from '@angular/material/dialog';\nimport {MatTooltipModule} from '@angular/material/tooltip';\nimport {MatSnackBarModule} from '@angular/material/snack-bar';\n\nimport {MatSortModule} from '@angular/material/sort';\nimport {MatPaginatorModule} from '@angular/material/paginator';\n\n@NgModule({\n   imports: [\n    MatCardModule, \n    MatDialogModule, \n    MatMenuModule,\n    MatProgressSpinnerModule,\n      CommonModule,\n      MatButtonModule,\n      MatToolbarModule,\n      MatIconModule,\n      MatSidenavModule,\n     \n      MatListModule,\n      MatGridListModule,\n      MatFormFieldModule,\n      MatInputModule,\n      MatSelectModule,\n      MatRadioModule,\n      MatDatepickerModule,\n     \n      MatChipsModule,\n      MatTooltipModule,\n      MatTableModule,\n      MatPaginatorModule\n   ],\n   exports: [\n    MatCardModule, \n    MatDialogModule, \n    MatMenuModule,\n    MatProgressSpinnerModule,\n      MatButtonModule,\n      MatToolbarModule,\n      MatIconModule,\n      MatSidenavModule,\n      \n      MatListModule,\n      MatGridListModule,\n      MatInputModule,\n      MatFormFieldModule,\n      MatSelectModule,\n      MatRadioModule,\n      MatDatepickerModule,\n      MatChipsModule,\n      MatTooltipModule,\n      MatTableModule,\n      MatPaginatorModule\n   ],\n   providers: [\n      MatDatepickerModule,\n   ]\n})\n\nexport class AngularMaterialModule { }","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { StudentDetailsComponent } from './student/student-details.component';\nimport { LoginComponent } from './login/login.component';\nimport { StudentCRUDComponent } from './student/student-crud.component';\nimport { StudentListComponent } from './student/student-list.component';\nimport { WelcomeComponent } from './home/welcome.component';\nimport { StarComponent } from './shared/star.component';\nimport { StudentGuard } from './shared/student.guard';\nimport {StudentEditGuard} from './shared/student-edit.guard'\nimport { AuthInterceptor } from './shared/auth.interceptor';\nimport {AppComponent} from './app.component'\nconst routes: Routes = [\n\n    {path:'studentList' , component: StudentListComponent},\n      {path :'student/:id/edit',canDeactivate: [StudentEditGuard] ,component:StudentCRUDComponent},\n      { path:'student/:id' , canActivate: [StudentGuard] ,component:StudentDetailsComponent},\n      {path:'login', component:LoginComponent},\n      {path:'home', component:AppComponent},\n      { path: 'welcome', component: WelcomeComponent },\n      { path: '', redirectTo: 'welcome', pathMatch: 'full' },\n      { path: '**', redirectTo: 'welcome', pathMatch: 'full' }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes,{ useHash: true })],\n  exports: [RouterModule]\n})\n\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'Coaching-Portal';\n  pageTitle : string ='Hello World..!!!';\n  \n  \n}\n","<!--<nav class='navbar navbar-expand navbar-light bg-light'>\n  <a class='navbar-brand'>{{pageTitle}}</a>-->\n\n  <app-header></app-header>\n<router-outlet></router-outlet>\n\n <!-- <ul class='nav nav-pills' *ngIf='false'>\n    <li><a class='nav-link' routerLinkActive='active' [routerLink]=\"['/welcome']\">Home</a></li>\n    <li><a class='nav-link' routerLinkActive='active' [routerLink]=\"['/studentList']\">Student List</a></li>\n    <li><a class='nav-link' routerLinkActive='active' [routerLink]=\"['/saveStudent']\">Save Student</a></li>\n   \n  </ul>\n  </nav>-->\n ","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport {FormsModule,ReactiveFormsModule} from '@angular/forms';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { StudentListComponent } from './student/student-list.component';\nimport { RouterModule } from '@angular/router';\nimport { WelcomeComponent } from './home/welcome.component';\nimport { StarComponent } from './shared/star.component';\nimport { StudentGuard } from './shared/student.guard';\nimport { AuthInterceptor } from './shared/auth.interceptor';\nimport {HttpClientModule,HTTP_INTERCEPTORS} from '@angular/common/http';\nimport { StudentDetailsComponent } from './student/student-details.component';\nimport { LoginComponent } from './login/login.component';\nimport { StudentCRUDComponent } from './student/student-crud.component';\nimport {DateConverter} from './shared/dateConverter';\nimport {HeaderComponent} from './header/header.component';\nimport { AngularMaterialModule } from './angular-material.module';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { HashLocationStrategy, LocationStrategy } from '@angular/common';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    StarComponent,\n    WelcomeComponent,\n   StudentDetailsComponent,\n   StudentListComponent,\n  StudentCRUDComponent,\n  LoginComponent,\n  DateConverter,\n  HeaderComponent\n    \n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    ReactiveFormsModule,\n    RouterModule,\n    AppRoutingModule,\n    HttpClientModule,\n    AngularMaterialModule,\n    BrowserAnimationsModule\n  ],\n  providers: [ \n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: AuthInterceptor,\n      multi: true\n    },\n     {provide: LocationStrategy, useClass: HashLocationStrategy}\n    ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { AuthenticationService } from '../shared/authentication.service';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.css']\n})\nexport class HeaderComponent implements OnInit {\n\n  constructor(public loginService:AuthenticationService){ }\n  ngOnInit() {\n  }\n\n}\n","<mat-toolbar color=\"primary\">\n    <mat-toolbar-row>\n        <span>Coaching App  </span>\n        <span class=\"example-fill-remaining-space\"></span>\n        <span class=\"align-center\"></span>\n        <span class=\"example-spacer\"></span>\n        <ul class='nav nav-pills' *ngIf='true'>\n        <!--<a mat-button *ngIf=\"!loginService.isUserLoggedIn()\" routerLink=\"/login\" class=\"nav-link\">Login</a>-->\n        <li><a mat-button class='nav-link' routerLinkActive='active' [routerLink]=\"['/welcome']\">Home</a></li>\n        <li><a mat-button class='nav-link' routerLinkActive='active' [routerLink]=\"['/studentList']\">Student List</a></li>\n        <li><a mat-button class='nav-link' routerLinkActive='active' [routerLink]=\"['/student','0','edit']\">Add Student</a></li>\n\n</ul>\n    </mat-toolbar-row>\n</mat-toolbar>","import { Component,Input } from '@angular/core';\nimport {Router,ActivatedRoute} from '@angular/router';\nimport { FormBuilder, FormGroup, Validators } from  '@angular/forms';\n\nimport { AuthenticationService } from '../shared/authentication.service';\n\n@Component({\nselector:'app-start',\ntemplateUrl: './welcome.component.html'\n})\n\nexport class WelcomeComponent {\nwelcomePageTitle: string='Welcome to the coaching portal';\nloginForm: FormGroup;\n  isSubmitted  =  false;\n\n  constructor(\n    private router: Router, \n    private route:ActivatedRoute,\n   private formBuilder: FormBuilder, \n   private loginservice: AuthenticationService\n   ) { }\n\npageTitle: string='Welcome Rachit to the coaching portal'\n    loading = false;\n     returnUrl: string;\n username = ''\n  password = ''\n  invalidLogin = false\n  \n  @Input() error: string | null;\n\nget formControls() { return this.loginForm.controls; }\n\n  ngOnInit() {\n  this.loginForm  =  this.formBuilder.group({\n        username: ['', Validators.required],\n        password: ['', Validators.required]\n    }); \n    this.returnUrl = this.route.snapshot.queryParams['welcome'] || '/';\n  }\n\n  checkLogin() {\n    (this.loginservice.authenticate(this.loginForm.value).subscribe(\n      data => {\n        this.router.navigate([''])\n        this.invalidLogin = false\n      },\n      error => {\n        this.invalidLogin = true\n        this.error = error.message;\n\n      }\n    )\n    );\n\n  }\n}\n","\n<div class=\"card\">\n  <div class=\"card-header\">\n    {{pageTitle}}\n  </div>\n\n  <div class=\"card-body\">\n\n    <div class=\"container-fluid\">\n      <div class=\"text-center\">\n        <img src=\"./assets/images/Rachit.png\"\n             class=\"img-responsive center-block\"\n             style=\"max-height:300px;padding-bottom:50px\" />\n      </div>\n\n      <div class=\"text-center\">Developed by:</div>\n      <div class=\"text-center\">\n        <h3>Rachit Mundhada</h3>\n      </div>\n\n      <div class=\"text-center\">rachitmundhada@gmail.com</div>\n      <div class=\"text-center\">\n        \n      </div>\n    </div>\n\n <form novalidate\n  [formGroup]=\"loginForm\">\n    <input type=\"text\" id=\"login\" class=\"form-control\" name=\"login\" placeholder=\"login\" formControlName=\"username\"><br>\n    <input type=\"text\" id=\"password\" class=\"form-control\" name=\"login\" placeholder=\"password\" formControlName=\"password\">\n    <div class=\"form-group row mb-2\">\n      <div class=\"offset-md-2 col-md-4\">\n        <br>\n        <button class=\"btn btn-primary mr-3 login-button\"\n                type=\"submit\"\n                style=\"width:80px\"\n                [title]=\"loginForm.valid ? 'Save your entered data' : 'Disabled until the form data is valid'\"\n                [disabled]=\"!loginForm.valid\"\n               (click)=\"checkLogin()\"\n                >\n                \n          Login\n        </button>\n      </div>\n    </div>\n  </form>\n\n  <!-- Remind Passowrd \n  <div id=\"formFooter\">\n    <a class=\"underlineHover\" href=\"#\">Forgot Password?</a>\n  </div>-->\n  </div>\n \n  \n</div>","import { Component, OnInit, Input } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { AuthenticationService } from '../shared/authentication.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  username = ''\n  password = ''\n  invalidLogin = false\n  \n  @Input() error: string | null;\n\n  constructor(private router: Router,\n    private loginservice: AuthenticationService) { }\n\n  ngOnInit() {\n  }\n\n  checkLogin() {\n    (this.loginservice.authenticate(this.username).subscribe(\n      data => {\n        this.router.navigate([''])\n        this.invalidLogin = false\n      },\n      error => {\n        this.invalidLogin = true\n        this.error = error.message;\n\n      }\n    )\n    );\n\n  }\n\n}","\n<mat-card>\n    <mat-card-header>\n        <mat-card-title>Login</mat-card-title>\n    </mat-card-header>\n    <mat-card-content>\n        <form>\n            <table class=\"example-full-width\" cellspacing=\"0\">\n                <tr>\n                    <td>\n                        <mat-form-field class=\"example-full-width\">\n                            <input matInput placeholder=\"Username\" [(ngModel)]=\"username\" name=\"username\" required>\n                        </mat-form-field>\n                    </td>\n                </tr>\n                <tr>\n                    <td>\n                        <mat-form-field class=\"example-full-width\">\n                            <input matInput placeholder=\"Password\" [(ngModel)]=\"password\" type=\"password\" name=\"password\" required>\n                        </mat-form-field>\n                    </td>\n                </tr>\n                <p *ngIf=\"error\" class=\"error\">\n                    {{ error }}\n                </p>\n            </table>\n        </form>\n       \n    </mat-card-content>\n    <mat-card-actions>\n        <button mat-raised-button (click)=\"checkLogin()\" color=\"primary\">Login</button>\n    </mat-card-actions>\n</mat-card>","import { Injectable } from \"@angular/core\";\r\nimport { tap } from \"rxjs/operators\";\r\nimport {\r\n  HttpRequest,\r\n  HttpHandler,\r\n  HttpEvent,\r\n  HttpInterceptor,\r\n  HttpResponse,\r\n  HttpErrorResponse\r\n} from \"@angular/common/http\";\r\n//import { Observable } from \"rxjs/Observable\";\r\nimport {Observable, throwError} from 'rxjs';\r\nimport { map, catchError } from 'rxjs/operators';\r\n\r\n@Injectable()\r\nexport class AuthInterceptor implements HttpInterceptor {\r\n  constructor() { }\r\nintercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n        //const token: string = localStorage.getItem('token');\r\n        console.log('Auth service called')\r\n        const token: string = 'eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhZG1pbiIsImV4cCI6MTU5NDY2MTkxMX0.970Hz2jSELM2CWqxA_6b57gJZdNQ5bxFPYHZSHLqUnHwbJUVDEMxbtUKt8utf_gsiRuKbRWr3cxMlUakV4-G1w';\r\n        \r\n        if (token) {\r\n            console.log('token inserted in the headers')\r\n            request = request.clone({ headers: request.headers.set('Authorization', token) });\r\n        }\r\n\r\n        if (!request.headers.has('Content-Type')) {\r\n            \r\n            request = request.clone({ headers: request.headers.set('Content-Type', 'application/json') });\r\n        }\r\n\r\n        request = request.clone({ headers: request.headers.set('Accept', 'application/json') });\r\n\r\n        return next.handle(request).pipe(\r\n            map((event: HttpEvent<any>) => {\r\n                if (event instanceof HttpResponse) {\r\n                    console.log('event--->>>', event);\r\n                }\r\n                return event;\r\n            }));\r\n    }\r\n\r\n\r\n\r\n}","import { Injectable } from \"@angular/core\";\nimport { HttpClient, HttpHeaders } from \"@angular/common/http\";\nimport { map } from \"rxjs/operators\";\n\nexport class User {\n  constructor(public status: string) {}\n}\n\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AuthenticationService {\n  constructor(private httpClient: HttpClient) {}\n// Provide username and password for authentication, and once authentication is successful, \n//store JWT token in session\n  authenticate(login) {\n    const body=[];\n    const url='http://localhost:8080/StubProject/login';\n    console.log('Before hitting for the login service -'+ JSON.stringify(login))\n    return this.httpClient\n      .post<any>(url, { login})\n      .pipe(\n        map(userData => {\n          sessionStorage.setItem(\"username\", login);\n          let tokenStr = \"Bearer \" + userData.token;\n          sessionStorage.setItem(\"token\", tokenStr);\n          return userData;\n        })\n      );\n  }\n\n  isUserLoggedIn() {\n    let user = sessionStorage.getItem(\"username\");\n   \n    return !(user === null);\n  }\n\n  logOut() {\n    sessionStorage.removeItem(\"username\");\n  }\n}\n","import {Pipe, PipeTransform} from '@angular/core'; \r\n\r\n@Pipe({\r\n    name:'dateConverter'\r\n})\r\n\r\nexport class DateConverter implements PipeTransform{\r\n\r\n    transform(value:string, character:string) :string {\r\n        return '';\r\n    }\r\n\r\n}","import {AbstractControl, ValidatorFn} from '@angular/forms'\r\n\r\nexport class NumberRangeValidators{\r\n\r\n    static range(min:number , max: number): ValidatorFn{\r\n\r\n        return (c:AbstractControl) :{[key: string]: boolean }| null=>{\r\n            if (c.value && (isNaN(c.value) || c.value < min || c.value > max)){\r\n                return {'range': true};\r\n            }\r\n            else\r\n            return null;\r\n        }\r\n    }\r\n}","import { Component, OnChanges, Input, EventEmitter, Output } from '@angular/core';\r\n\r\n@Component({\r\n    selector:'pm-star',\r\n    templateUrl:'./star.component.html',\r\n    styleUrls:['./star.component.css']\r\n})\r\nexport class StarComponent implements OnChanges{\r\n    ngOnChanges(): void {\r\n        this.starWidth=this.rating*75/5;\r\n    }\r\n  @Output()  ratingClicked: EventEmitter<string>=\r\n    new EventEmitter<string>();\r\n\r\n@Input() rating: number;\r\n\r\nstarWidth: number;\r\n\r\nonClick():void{\r\n    this.ratingClicked.emit(`The rating ${this.rating} was clicked!`);\r\n}\r\n\r\n\r\n\r\n}\r\n","<div class=\"crop\"\n     [style.width.px]=\"starWidth\"\n     [title]=\"rating\"\n     (click)=\"onClick()\">\n  <div style=\"width: 75px\">\n    <span class=\"fa fa-star\"></span>\n    <span class=\"fa fa-star\"></span>\n    <span class=\"fa fa-star\"></span>\n    <span class=\"fa fa-star\"></span>\n    <span class=\"fa fa-star\"></span>\n  </div>\n</div>","import { Injectable } from '@angular/core';\nimport { CanDeactivate } from '@angular/router';\nimport { Observable } from 'rxjs';\n\nimport { StudentCRUDComponent } from '../Student/student-crud.component';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class StudentEditGuard implements CanDeactivate<StudentCRUDComponent> {\n  canDeactivate(component: StudentCRUDComponent): Observable<boolean> | Promise<boolean> | boolean {\n    console.log('In the deactivate method')\n    if (component.studentForm.dirty) {\n      console.log('In the deactivate method')\n      const studentName = component.studentForm.get('studentName').value || 'New Product';\n      return confirm(`Navigate away and lose all changes to ${studentName}?`);\n    }\n    return true;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Router, CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree } from '@angular/router';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class StudentGuard implements CanActivate {\n  \n  constructor (private router:Router ){}\n  canActivate(\n    next: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\n    let id =+next.url[1].path;\n    if (isNaN(id) || id<1)\n    {\n        alert(\"Invalid Student id\");\n        this.router.navigate(['/studentList']);\n        return false;\n    }\n    return true;\n  }\n  \n}\n","import { Component, OnInit } from '@angular/core';\r\nimport {FormGroup, FormBuilder, Validators, AbstractControl, ValidatorFn} from '@angular/forms';\r\nimport {Student} from '../shared/studentDTO';\r\nimport { IStudents } from './students';;\r\nimport { NgForm } from '@angular/forms';\r\nimport{StudentAPIService} from './student.service';\r\nimport { debounceTime } from 'rxjs/operators';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { Observable, Subscription, fromEvent, merge } from 'rxjs';\r\nimport {NumberRangeValidators} from '../shared/numberRange-validators';\r\n\r\nfunction confirmFees(fees:AbstractControl): {[key:string]:boolean}|null {\r\n\r\n  const fee=fees.get('fees').value;\r\n  const reFees=fees.get('reFees').value;\r\n\r\n  \r\n  if ( fee!=null && reFees!=null && (fee.pristine || reFees.pristine)){\r\n    \r\n    return null;\r\n  }\r\n \r\n  if (fee===reFees)\r\n  {\r\n    \r\n    return null;\r\n  }\r\n  else{\r\n     \r\n  return {'match':true};\r\n  }\r\n  \r\n}\r\n\r\nfunction emailMatcher(c: AbstractControl): { [key: string]: boolean } | null {\r\n  const emailControl = c.get('email');\r\n  const confirmControl = c.get('confirmEmail');\r\n\r\n  if (emailControl.pristine || confirmControl.pristine) {\r\n    return null;\r\n  }\r\n\r\n  if (emailControl.value === confirmControl.value) {\r\n    return null;\r\n  }\r\n  return { match: true };\r\n}\r\n\r\n@Component({\r\nselector: 'app-student-crud',\r\ntemplateUrl: './student-crud.component.html',\r\nstyleUrls: ['./student-crud.component.css']\r\n})\r\nexport class StudentCRUDComponent implements OnInit {\r\n\r\nconstructor(\r\nprivate fb:FormBuilder, \r\nprivate studentAPIService:StudentAPIService,\r\nprivate router: ActivatedRoute,\r\nprivate route: Router \r\n\r\n) {\r\n}\r\n\r\nstudentForm: FormGroup;\r\nstudent:IStudents;\r\nsubmitted:boolean = false; \r\nerrorMessage: string;\r\nisPhone:boolean;\r\nprivate sub: Subscription;\r\npageTitle='';\r\nisDeleted=false;\r\nstudentAddConfirmation='Student Added SuccessFully!';\r\n\r\n\r\n private validationMessages = {\r\n    required: 'Please enter your email address.',\r\n    email: 'Please enter a valid email address.'\r\n  };\r\n\r\n\r\n  ngOnInit(): void {\r\n    this.setFormValues();\r\n    this.studentForm.get('notification').valueChanges.subscribe(\r\n      val=> this.onRadioClick(val)\r\n    );\r\n\r\n     //this.onRadioClick(this.studentForm.get('notification').value);\r\n    const emailControl=this.studentForm.get('emailGroup.email');\r\n    emailControl.valueChanges.pipe(debounceTime(1000)).subscribe(\r\n      value=>this.setMessage(emailControl),\r\n    )\r\n\r\n    this.sub=this.router.paramMap.subscribe(\r\n      params=>{\r\n        const id=+   params.get('id');\r\n        this.getStudent(id);\r\n      }\r\n\r\n    )\r\n  }\r\n\r\n  getStudent(id:number): void{\r\n      this.studentAPIService.getStudentbyID(id).subscribe({\r\n        next:(student: IStudents)=> this.displayStudent(student),\r\n       error: err => this.errorMessage = err\r\n      })\r\n  }\r\n\r\n\r\n\r\ndisplayStudent(student:IStudents){\r\n  if (this.studentForm){\r\n    this.studentForm.reset;\r\n  }\r\n\r\n  this.student= student;\r\n  if (this.student.studentId === 0){\r\n    this.pageTitle='Enter Students Details to Save...';\r\n\r\n  }\r\n  else {\r\n  this.pageTitle='Edit Students Details...';\r\n  }\r\n  // Need to add the details...\r\n  this.studentForm.patchValue({\r\n    studentName: this.student.studentName,\r\n    studentStandard:this.student.studentStandard,\r\n    studentDOJ:this.student.studentDOJ,\r\n    studentDOB: this.student.studentDOB,\r\n    studentRating: this.student.studentRating,\r\n    //feeGroup: this.student.feeGroup\r\n   \r\n  });\r\n //this.studentForm.setControl('emailGroup', this.fb.array(this.student.emailGroup || []));\r\n}\r\n\r\n  ngOnDestroy():void{\r\n   \r\n    this.sub.unsubscribe();\r\n  }\r\n  \r\n  setFormValues(){\r\n      this.studentForm=this.fb.group({\r\n      studentName:['', [Validators.required, Validators.minLength(3)]],\r\n      studentStandard:['', [Validators.required, Validators.minLength(1)]],\r\n      studentDOJ:['', [Validators.required, Validators.minLength(8)]],\r\n      studentDOB:['', [Validators.required, Validators.minLength(8)]],\r\n      emailGroup: this.fb.group({\r\n        email: [''],\r\n        confirmEmail: [''],\r\n      },{validator: emailMatcher}),\r\n      phone: '',\r\n      notification:'email',\r\n      feeGroup: this.fb.group({\r\n      fees:['', [Validators.required, Validators.minLength(2)]],\r\n      reFees:['', [Validators.required, Validators.minLength(2)]]\r\n      },{ validator:confirmFees }),\r\n      studentRating:['', [NumberRangeValidators.range(1,5)]]\r\n    })\r\n    }\r\n\r\n  save() {\r\n    console.log('Saved: ' + JSON.stringify(this.studentForm.value));\r\n    if (this.studentForm){\r\n      if (this.studentForm.dirty){\r\n        const s= {...this.student, ...this.studentForm.value};\r\n        if (s.studentId===0){\r\n            this.studentAPIService.addStudents(s)\r\n            .subscribe(res => {\r\n              this.submitted = true; \r\n              this.studentForm.reset();  \r\n              }, (err) => {\r\n              console.log(err);\r\n                 });\r\n        }\r\n        else{\r\n          console.log('In the update method calling the service...'+ JSON.stringify(s))\r\n              this.studentAPIService.update(s).subscribe({\r\n                next: () => this.onSaveComplete(),\r\n              error: err => this.errorMessage = err\r\n              })\r\n        }\r\n      }\r\n      else {\r\n        this.onSaveComplete();\r\n      }\r\n    }\r\n    else {\r\n      this.errorMessage = 'Please correct the validation errors.';\r\n    }\r\n  }\r\n\r\n  addStudentForm(){  \r\n    this.submitted=false;  \r\n    this.studentForm.reset();  \r\n  }\r\n\r\n  onRadioClick(value:string): void {\r\n    \r\n    \r\n    const emailControl=this.studentForm.get('emailGroup.email');\r\n    const confirmEmailControl=this.studentForm.get('emailGroup.confirmEmail');\r\n    const emailGroupControl=this.studentForm.get('emailGroup');\r\n    const phoneControl=this.studentForm.get('phone');\r\n    if (value=== 'text'){\r\n        phoneControl.setValidators(Validators.required)\r\n       \r\n        this.isPhone=true;\r\n        emailControl.clearValidators();\r\n         emailGroupControl.clearValidators();\r\n         confirmEmailControl.clearValidators();\r\n    }\r\n    else {\r\n      phoneControl.clearValidators();\r\n      emailControl.setValidators([Validators.required, Validators.email]);\r\n      confirmEmailControl.setValidators(Validators.required)\r\n     \r\n      this.isPhone=false;\r\n    }\r\n    emailControl.updateValueAndValidity();\r\n    phoneControl.updateValueAndValidity();\r\n    emailGroupControl.updateValueAndValidity();\r\n    confirmEmailControl.updateValueAndValidity();\r\n  }\r\n\r\n setMessage(c: AbstractControl): void {\r\n    this.errorMessage = '';\r\n    \r\n    if ((c.touched || c.dirty) && c.errors) {\r\n     \r\n      this.errorMessage = Object.keys(c.errors).map(\r\n        key => this.validationMessages[key]).join(' ');\r\n    }\r\n  }\r\n\r\ndeleteProduct(){\r\n if (this.student.studentId===0) {\r\n   this.onSaveComplete();\r\n }\r\n else{\r\n   if (confirm(`Please confirm to delete student ${this.studentForm.get('studentName').value}`)){\r\n     this.studentAPIService.deleteById(this.student.studentId).subscribe({\r\n       next:(data)=>{this.onSaveComplete()\r\n       this.isDeleted=true;\r\n       },\r\n       error: err=> this.errorMessage =err\r\n     });\r\n   }\r\n }\r\n}\r\n\r\nonSaveComplete(): void {\r\n    // Reset the form to clear the flags\r\n    this.studentForm.reset();\r\n    this.route.navigate(['/studentList']);\r\n  }\r\n}\r\n","<div class=\"card\">\n    <div class=\"card-header\">\n      {{pageTitle}}<span [hidden]=!submitted> <h4>{{studentAddConfirmation}}</h4>  </span>\n    </div>\n  \n    <div class=\"card-body\">\n      <form novalidate\n            [formGroup]=\"studentForm\"\n           >\n  \n        <div class=\"form-group row mb-2\">\n          <label class=\"col-md-2 col-form-label\"\n                 for=\"firstNameId\">Name</label>\n          <div class=\"col-md-8\">\n            <input class=\"form-control\"\n                   id=\"firstNameId\"\n                   type=\"text\"\n                   placeholder=\" Name (required)\"\n                  formControlName=\"studentName\"\n                  [ngClass]=\"{'is-invalid': (studentForm.get('studentName').touched || studentForm.get('studentName').dirty) && !studentForm.get('studentName').valid }\" />\n               \n            <span class=\"invalid-feedback\">\n              <span *ngIf=\"studentForm.get('studentName').errors?.required\">\n                Please enter your first name.\n              </span>\n              <span *ngIf=\"studentForm.get('studentName').errors?.minlength\">\n                The first name must be longer than 3 characters.\n              </span>\n            </span>\n          </div>\n        </div>\n  \n        <div class=\"form-group row mb-2\">\n          <label class=\"col-md-2 col-form-label\"\n                 for=\"standard\">Standard</label>\n          <div class=\"col-md-8\">\n            <input class=\"form-control\"\n                   id=\"standard\"\n                   type=\"text\"\n                   placeholder=\"Class (required)\"\n                formControlName=\"studentStandard\"\n                   [ngClass]=\"{'is-invalid': (studentForm.get('studentStandard').touched || studentForm.get('studentStandard').dirty) && !studentForm.get('studentStandard').valid }\" />\n            <span class=\"invalid-feedback\">\n              <span *ngIf=\"studentForm.get('studentStandard').errors?.required\">\n                Please enter class.\n              </span>\n              <span *ngIf=\"studentForm.get('studentStandard').errors?.minLength\">\n                The class must be more than 01 characters.\n              </span>\n            </span>\n          </div>\n        </div>\n  \n\n        <div class=\"form-group row mb-2\">\n          <label class=\"col-md-2 col-form-label\"\n                 for=\"DOJ\">DOJ</label>\n          <div class=\"col-md-8\">\n            <input class=\"form-control\"\n                   id=\"DOJ\"\n                   type=\"text\"\n                   placeholder=\"DOJ (required)\"\n                formControlName=\"studentDOJ\"\n                   [ngClass]=\"{'is-invalid': (studentForm.get('studentDOJ').touched || studentForm.get('studentDOJ').dirty) && !studentForm.get('studentDOJ').valid }\" />\n            <span class=\"invalid-feedback\">\n              <span *ngIf=\"studentForm.get('studentDOJ').errors?.required\">\n                Please enter DOJ.\n              </span>\n              <span *ngIf=\"studentForm.get('studentDOJ').errors?.minLength\">\n                The class must be more than 01 characters.\n              </span>\n            </span>\n          </div>\n        </div>\n\n        <div class=\"form-group row mb-2\">\n          <label class=\"col-md-2 col-form-label\"\n                 for=\"DOB\">DOB</label>\n          <div class=\"col-md-8\">\n            <input class=\"form-control\"\n                   id=\"DOB\"\n                   type=\"text\"\n                   placeholder=\"DOB (required)\"\n                formControlName=\"studentDOB\"\n                   [ngClass]=\"{'is-invalid': (studentForm.get('studentDOB').touched || studentForm.get('studentDOB').dirty) && !studentForm.get('studentDOB').valid }\" />\n            <span class=\"invalid-feedback\">\n              <span *ngIf=\"studentForm.get('studentDOB').errors?.required\">\n                Please enter DOB.\n              </span>\n              <span *ngIf=\"studentForm.get('studentDOB').errors?.minLength\">\n                The class must be more than 01 characters.\n              </span>\n            </span>\n          </div>\n        </div>\n        \n      <div formGroupName=\"feeGroup\">\n       <div class=\"form-group row mb-2\">\n          <label class=\"col-md-2 col-form-label\"\n                 for=\"fees\">Fees</label>\n          <div class=\"col-md-8\">\n            <input class=\"form-control\"\n                   id=\"fees\"\n                   type=\"text\"\n                   placeholder=\"Fees (required)\"\n                formControlName=\"fees\"\n                   [ngClass]=\"{'is-invalid':studentForm.get('feeGroup').errors ||\n                   ((studentForm.get('feeGroup.fees').touched || \n                   studentForm.get('feeGroup.fees').dirty)\n                    && !studentForm.get('feeGroup.fees').valid) }\" />\n            <span class=\"invalid-feedback\">\n              <span *ngIf=\"studentForm.get('feeGroup.fees').errors?.required\">\n                Please enter fees.\n              </span>\n              <span *ngIf=\"studentForm.get('feeGroup.fees').errors?.minLength\">\n                The class must be more than 01 characters.\n              </span>\n            </span>\n          </div>\n        </div>\n\n        <div class=\"form-group row mb-2\">\n          <label class=\"col-md-2 col-form-label\"\n                 for=\"refees\">Re-enter Fees</label>\n          <div class=\"col-md-8\">\n            <input class=\"form-control\"\n                   id=\"refees\"\n                   type=\"text\"\n                   placeholder=\"Re-confirm Fees (required)\"\n                formControlName=\"reFees\"\n                   [ngClass]=\"{'is-invalid':studentForm.get('feeGroup').errors|| ((studentForm.get('feeGroup.reFees').touched\n                    || studentForm.get('feeGroup.reFees').dirty) \n                   && !studentForm.get('feeGroup.reFees').valid) }\" />\n            <span class=\"invalid-feedback\">\n              <span *ngIf=\"studentForm.get('feeGroup.reFees').errors?.required\">\n                Please enter fees.\n              </span>\n              <span *ngIf=\"studentForm.get('feeGroup').errors?.match\">\n                The confirmation fees does not match...\n              </span>\n            </span>\n          </div>\n        </div>\n      </div>\n\n      \n\n      <div class=\"form-group row mb-2\">\n        <label class=\"col-md-2 col-form-label pt-0\">Send Notifications</label>\n        <div class=\"col-md-8\">\n          <div class=\"form-check form-check-inline\">\n            <label class=\"form-check-label\">\n              <input class=\"form-check-input\"\n                     type=\"radio\"\n                     value=\"email\"\n                      checked\n                     formControlName=\"notification\">Email\n            </label>\n          </div>\n          <div class=\"form-check form-check-inline\">\n            <label class=\"form-check-label\">\n              <input class=\"form-check-input\"\n                     type=\"radio\"\n                     value=\"text\"\n                     formControlName=\"notification\">Text\n            </label>\n          </div>\n        </div>\n      </div>\n\n      <div formGroupName=\"emailGroup\" *ngIf=\"!isPhone\">\n        <div class=\"form-group row mb-2\">\n          <label class=\"col-md-2 col-form-label\"\n                 for=\"emailId\">Email</label>\n          <div class=\"col-md-8\">\n            <input class=\"form-control\"\n                   id=\"emailId\"\n                   type=\"email\"\n                   placeholder=\"Email (required)\"\n                   formControlName=\"email\"\n                   [ngClass]=\"{'is-invalid': errorMessage }\" />\n            <span class=\"invalid-feedback\">\n              {{ errorMessage }}\n            </span>\n          </div>\n        </div>\n\n        <div class=\"form-group row mb-2\">\n          <label class=\"col-md-2 col-form-label\"\n                 for=\"confirmEmailId\">Confirm Email</label>\n          <div class=\"col-md-8\">\n            <input class=\"form-control\"\n                   id=\"confirmEmailId\"\n                   type=\"email\"\n                   placeholder=\"Confirm Email (required)\"\n                   formControlName=\"confirmEmail\"\n                   [ngClass]=\"{'is-invalid': studentForm.get('emailGroup').errors ||\n                                             ((studentForm.get('emailGroup.confirmEmail').touched || \n                                             studentForm.get('emailGroup.confirmEmail').dirty) && \n                                              !studentForm.get('emailGroup.confirmEmail').valid) }\" />\n            <span class=\"invalid-feedback\">\n              <span *ngIf=\"studentForm.get('emailGroup.confirmEmail').errors?.required\">\n                Please confirm your email address.\n              </span>\n              <span *ngIf=\"studentForm.get('emailGroup').errors?.match\">\n                The confirmation does not match the email address.\n              </span>\n            </span>\n          </div>\n        </div>\n      </div>\n\n      <div class=\"form-group row mb-2\" *ngIf=\"isPhone\">\n        <label class=\"col-md-2 col-form-label\"\n               for=\"phoneId\">Phone</label>\n        <div class=\"col-md-8\">\n          <input class=\"form-control\"\n                 id=\"phoneId\"\n                 type=\"tel\"\n                 placeholder=\"Phone\"\n                 formControlName=\"phone\"\n                 [ngClass]=\"{'is-invalid': !studentForm.get('phone').valid }\" />\n          <span class=\"invalid-feedback\">\n            <span *ngIf=\"studentForm.get('phone').errors?.required\">\n              Please enter your phone number.\n            </span>\n          </span>\n        </div>\n      </div>\n\n\n\n        <div class=\"form-group row mb-2\">\n          <label class=\"col-md-2 col-form-label\"\n                 for=\"ratings\">Ratings</label>\n          <div class=\"col-md-8\">\n            <input class=\"form-control\"\n                   id=\"ratings\"\n                   type=\"text\"\n                   placeholder=\"Ratings (required)\"\n                formControlName=\"studentRating\"\n                   [ngClass]=\"{'is-invalid': (studentForm.get('studentRating').touched || studentForm.get('studentRating').dirty) \n                   && !studentForm.get('studentRating').valid }\" />\n            <span class=\"invalid-feedback\">\n              <span *ngIf=\"studentForm.get('studentRating').errors?.range\">\n                Please enter ratings between 1 and 5.\n              </span>\n            </span>\n          </div>\n        </div>\n\n        <div class=\"form-group row mb-2\">\n          <div class=\"offset-md-2 col-md-6\">\n            <button class=\"btn btn-primary mr-3\"\n                    type=\"submit\"\n                    style=\"width:80px\"\n                    [title]=\"studentForm.valid ? 'Save your entered data' : 'Disabled until the form data is valid'\"\n                    [disabled]=\"!studentForm.valid\"\n                   (click)=\"save()\"\n                    >\n                    \n              Save\n            </button>\n\n            <button class=\"btn btn-primary mr-3\"\n            type=\"clear\"\n            style=\"width:80px\"\n            (click)=\"addStudentForm()\"\n            >\n      Clear\n            </button>\n\n              <button class=\"btn btn-outline-warning\"\n                  style=\"width:80px\"\n                  type=\"button\"\n                  title=\"Delete this product\"\n                  (click)=\"deleteProduct()\">\n                  Delete\n                 </button>\n\n          </div>\n        </div>\n      </form>\n      <div class=\"row\">  \n        <div class=\"col-md-4\"></div>  \n        <div class=\"col-md-8\">  \n            <div [hidden]=\"!submitted\">  \n              \n               <button (click)=\"addStudentForm()\" class='btn btn-primary'>Add More Student</button>  \n            </div>   \n            <div [hidden]=\"isDeleted\">\n              <h1 *ngIf='isDeleted' style=\"color: red;\">No Details found...!!!</h1>\n              </div>     \n        </div> \n    </div>\n  </div>\n  <!--<br>Dirty: {{ studentForm.dirty }}\n  <br>Touched: {{ studentForm.touched }}\n  <br>Valid: {{ studentForm.valid }}\n  <br>Value: {{ studentForm.value | json }}-->","import { Component, OnInit } from '@angular/core';\nimport { IStudents } from './students';\nimport {Router,ActivatedRoute} from '@angular/router';\nimport {StudentAPIService} from './student.service';\nimport { StudentService } from './student-list.service';\nimport { StudentDetailsService } from './student-details.service';\n@Component({\n  selector: 'app-student-details',\n  templateUrl: './student-details.component.html',\n  styleUrls: ['./student-details.component.css']\n})\nexport class StudentDetailsComponent implements OnInit {\n\n  constructor(private studentApiService: StudentAPIService,private studentDetailsService: StudentDetailsService, private router: Router, private route: ActivatedRoute) { }\n\n  studentDetails:IStudents;\n  errorMessage:string;\n  pageTitle:string='Details for student';\n  imageUrl='./assets/images/Rachit.png';\n  isPhone;\n  ngOnInit() {\n    let id=+ this.route.snapshot.paramMap.get('id');\n    this.studentApiService.getStudentbyID(id).subscribe({\n      next: studentDetails=>{\n        this.studentDetails=studentDetails;\n        console.log('Rachit...'+ this.studentDetails.phone)\n        if (this.studentDetails.phone=== ''){\n          this.isPhone=false\n          console.log('Email is present');\n        }\n        else{\n        this.isPhone=true;\n         console.log('Phone is present')\n        }\n        console.log('Details received for student by id:-'+JSON.stringify(this.studentDetails));\n      },\n     error: err => this.errorMessage = err\n    });\n  }\n  onBack():void {\n    this.router.navigate(['/studentList'])\n  }\n\n}\n","<div class='card'\n     *ngIf='studentDetails'>\n  <div class='card-header'>\n    {{pageTitle + ': ' + studentDetails.studentName}}\n\n\n  <div class='card-body'>\n    <div class='row'>\n      <div class='col-md-6'>\n        <div class='row'>\n          <div class='col-md-4'>Name:</div>\n          <div class='col-md-8'>{{studentDetails.studentName}}</div>\n        </div>\n        <div class='row'>\n          <div class='col-md-4'>StudentId:</div>\n          <div class='col-md-8'>{{studentDetails.studentId }}</div>\n        </div>\n        <div class='row'>\n          <div class='col-md-4'>Fees:</div>\n          <div class='col-md-8'>{{studentDetails.feeGroup.fees| currency:\"INR\":\"symbol\"}}</div>\n        </div>\n        <div class='row'>\n          <div class='col-md-4'>StudentStandard:</div>\n          <div class='col-md-8'>{{studentDetails.studentStandard}}</div>\n        </div>\n        <div class='row'>\n          <div class='col-md-4'>StudentDOB:</div>\n          <div class='col-md-8'>{{studentDetails.studentDOB}}</div>\n        </div>\n        <div class='row'>\n          <div class='col-md-4'>StudentDOJ:</div>\n          <div class='col-md-8'>{{studentDetails.studentDOJ}}</div>\n        </div>\n        <div class='row' >\n          <div class='col-md-4'>StudentDetails:</div>\n          <div class='col-md-8'>{{isPhone? studentDetails.phone: studentDetails.emailGroup.email}}</div>\n        </div>\n        <div class='row'>\n          <div class='col-md-4'>StudentRatings:</div>\n          <div class='col-md-8'>\n          <pm-star [rating]='studentDetails.studentRating'>\n            </pm-star>\n          </div>\n        </div>\n      </div>\n\n      <div class='col-md-2'>\n        <img class='center-block img-responsive'\n             [style.width.px]='150'\n             [style.margin.px]='2'\n             [src]='imageUrl'\n             [title]='studentDetails.studentName'>\n      </div>\n     \n    </div>\n  </div>\n\n\n  <div class=\"row mt-4\">\n    <div class=\"col-md-4\">\n      <button class=\"btn btn-outline-secondary mr-3\"\n              style=\"width:80px\"\n              (click)=\"onBack()\">\n        <i class=\"fa fa-chevron-left\"></i> Back\n      </button>\n      <button class='btn btn-outline-secondary'\n    [routerLink]=\"['/student', studentDetails.studentId, 'edit']\"\n    style='width:80px'>\n<i class='fa fa-chevron-right'></i> Edit\n</button>\n    </div>\n  </div>\n  </div>","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpErrorResponse } from '@angular/common/http';\n\nimport { IStudents } from './students';\nimport {Observable, throwError} from 'rxjs';\nimport {catchError, tap} from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class StudentDetailsService {\n\n  constructor(private http: HttpClient) { }\n\n private  urlProvider:string='http://localhost:8080/students/getDetailsById/';\n private jwtheader='eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhZG1pbiIsImV4cCI6MTU5MjgxNTM0MH0.7f6i3Uw4VeUKutcmedGD_NUoA8rxCHpn7mIZ8gOEpBibrQ6-B6LxpbJRg4sL7Hx2nTSoEflncsn24JAHVFnd3A';\n  getStudentbyID(id:string): Observable<IStudents>{\n  \n // this.urlProvider=this.urlProvider+ id;\n   console.log('The final url :-'+ this.urlProvider);\n    //return this.http.get<IStudents>(this.urlProvider+id,{headers:{'Authorization':this.jwtheader}\n     return this.http.get<IStudents>(this.urlProvider+id).pipe(\n      tap(data=>console.log('The data received from backend server for the student fetch by Id srvc:- '+JSON.stringify(data))),\n      catchError(this.handleError)\n\n\n    );\n\n  }\n\n  private handleError(err: HttpErrorResponse) {\n    // in a real world app, we may send the server to some remote logging infrastructure\n    // instead of just logging it to the console\n    let errorMessage = '';\n    if (err.error instanceof ErrorEvent) {\n      // A client-side or network error occurred. Handle it accordingly.\n      errorMessage = `An error occurred: ${err.error.message}`;\n    } else {\n      // The backend returned an unsuccessful response code.\n      // The response body may contain clues as to what went wrong,\n      errorMessage = `Server returned code: ${err.status}, error message is: ${err.message}`;\n    }\n    console.error(errorMessage);\n    return throwError(errorMessage);\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport { IStudents } from './students';\nimport { StudentService } from './student-list.service';\nimport {StudentAPIService} from './student.service';\n\n@Component({\n  selector: 'app-student-list',\n  templateUrl: './student-list.component.html',\n  styleUrls: ['./student-list.component.css']\n})\nexport class StudentListComponent implements OnInit {\n\n  pageTitle:string='Students List';\n  showImage: boolean=true;\n  imageWidth = 50;\n  imageMargin = 2;\n  filteredStudents: IStudents[];\n  errorMessage:string;\n  _listFilter = '';\n   isStudentNotPresent:boolean=false;\n   arraySize:number;\n\n\n  get listFilter(): string {\n    return this._listFilter;\n  }\n  set listFilter(value: string) {\n    this._listFilter = value;\n    this.filteredStudents = this.listFilter ? this.performFilter(this.listFilter) : this.students;\n  \n  }\n\n  performFilter(filterBy: string): IStudents[] {\n    filterBy = filterBy.toLocaleLowerCase();\n    return this.students.filter((student: IStudents) =>\n    student.studentName.toLocaleLowerCase().indexOf(filterBy) !== -1);\n  }\n  students:IStudents[];\n  constructor(private studentApiService: StudentAPIService,private studentService: StudentService) {\n   \n    this.listFilter='';\n   \n  } \n\n\n  onRatingCicked(message:string):void\n  {\n      console.log(message);\n      \n    this.pageTitle = 'Rating clicked'+message;\n  }\n  toggleImage(): void{\n\n    \n    this.showImage=!this.showImage;\n   \n  }\n\n  \n\n  ngOnInit(): void {\n    this.studentApiService.getStudentsList().subscribe({\n      next: students => {\n        \n        if (students.length<1)\n        {\n          this.isStudentNotPresent=true;\n        }\n  console.log('The size of the array received :-'+this.arraySize);\n  \n        this.students = students;\n        this.filteredStudents = this.students;\n      },\n      error: err => this.errorMessage = err\n    });\n  }\n\n}\n","<div class=\"card\">\n    <div class=\"card-header\">\n        {{pageTitle}}\n    </div>\n    <div class=\"card-body\">\n        <div class=\"row\">\n          <div class=\"col-md-2\">  Filter By:</div> \n          <div class=\"col-md-4\"> <input type=\"text\" [(ngModel)]='listFilter'></div>\n        </div>\n        <br>\n        <div class=\"row\">\n                <div class=\"col-md-d6\">\n                  <h4>  Filtered By: {{_listFilter}}</h4>\n                </div>\n            </div> \n            <div class=\"table-responsive\">\n                <table class=\"table\" *ngIf='students && students.length'>\n                    <thead>\n                        <tr>\n                            <th><button class=\"btn btn-primary\" (click)='toggleImage()'> {{showImage ? 'Hide':'Show'}} Image</button></th>\n                            <th>Student Name</th>\n                            <th>Student DOB</th>\n                            <th>Student Class</th>\n                            <th>Student DOJ</th>\n                            <th>Student Fees</th>\n                            <th>Student Ratings</th>\n                        </tr>\n\n                           \n                    </thead>\n                    <tbody>\n                        <tr *ngFor='let student of filteredStudents'>\n                            <td>\n                                <img *ngIf=\"showImage && student.imageUrl\"\n                   [src]=\"student.imageUrl\"\n                   [title]=\"student.studentName\"\n                   [style.width.px]=\"imageWidth\"\n                   [style.margin.px]=\"imageMargin\">\n                            </td>\n                            <td><a [routerLink]=\"['/student',student.studentId]\">{{student.studentName}}</a></td>\n                            <td>{{student.studentDOB}}</td>\n                            <td>{{student.studentStandard}}</td>\n                            <td>{{student.studentDOJ}}</td>\n                            <td>{{student.fees }}</td>\n                            <td><pm-star [rating]='student.ratings'  (click)='onRatingCicked($event)'></pm-star></td>\n                            <td>\n                                <button class=\"btn btn-outline-primary btn-sm\"\n                                        [routerLink]=\"['/student', student.studentId, 'edit']\">\n                                  Edit\n                                </button>\n                              </td>\n                        </tr>\n\n                    </tbody>\n                </table>\n                <h1 *ngIf='isStudentNotPresent' style=\"color: red;\">No Details found...!!!</h1>\n                \n            </div> \n    </div>\n</div>\n","import { Injectable } from '@angular/core';\nimport { IStudents } from './students';\nimport { HttpClient, HttpErrorResponse } from '@angular/common/http';\nimport {Observable, throwError} from 'rxjs';\nimport {catchError, tap} from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class StudentService {\n\n  constructor(private http: HttpClient) { }\n\n\n  private urlProvider='http://localhost:8080/students/getAllDetails';\n  //private jwtheader='eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhZG1pbiIsImV4cCI6MTU5MjgxNTM0MH0.7f6i3Uw4VeUKutcmedGD_NUoA8rxCHpn7mIZ8gOEpBibrQ6-B6LxpbJRg4sL7Hx2nTSoEflncsn24JAHVFnd3A';\n  getStudentsList(): Observable<IStudents[]>{\n   // return this.http.get<IStudents[]>(this.urlProvider,{headers:{'Authorization':this.jwtheader}}).pipe(\n   return this.http.get<IStudents[]>(this.urlProvider).pipe(\n      tap(data=>console.log('The data received from backend server:- '+JSON.stringify(data))),\n      catchError(this.handleError)\n    );\n  }\n\n  private handleError(err: HttpErrorResponse) {\n    // in a real world app, we may send the server to some remote logging infrastructure\n    // instead of just logging it to the console\n    let errorMessage = '';\n    if (err.error instanceof ErrorEvent) {\n      // A client-side or network error occurred. Handle it accordingly.\n      errorMessage = `An error occurred: ${err.error.message}`;\n    } else {\n      // The backend returned an unsuccessful response code.\n      // The response body may contain clues as to what went wrong,\n      errorMessage = `Server returned code: ${err.status}, error message is: ${err.message}`;\n    }\n    console.error(errorMessage);\n    return throwError(errorMessage);\n  }\n    \n \n}\n","import { Injectable } from '@angular/core';\nimport { IStudents } from './students';\nimport { HttpClient, HttpErrorResponse, HttpHeaders } from '@angular/common/http';\nimport {Observable, throwError, of} from 'rxjs';\nimport {catchError, tap} from 'rxjs/operators';\n@Injectable({\n  providedIn: 'root'\n})\nexport class StudentAPIService {\n\n\n  constructor(private http:HttpClient) { }\n   private urlProvider='http://localhost:8080/StubProject/students/';\n \n  //private urlProvider='http://ec2-13-127-187-209.ap-south-1.compute.amazonaws.com:8080/StubProject/students/';\n \n  addStudents (student): Observable<IStudents> {\n    const url= this.urlProvider+'saveStudent';\n    console.log('Final data to be send :-'+ JSON.stringify(student))\n     return this.http.post<IStudents>(url,student).pipe(\n    tap((student: IStudents) => console.log(`Student Name added ${student.studentId}`)),\n     catchError(this.handleError)\n  );\n}\n\n  getStudentbyID(id:any): Observable<IStudents>{\n\n    if (id=== 0){\n      console.log('Id is 0 returning empty object'+ JSON.stringify(this.initializedStudentObject()))\n      return of (this.initializedStudentObject())\n    }\n  const url= `${this.urlProvider}getDetailsById/${id}`;\n // this.urlProvider=this.urlProvider+ id;\n   console.log('The final url :-'+ url);\n    //return this.http.get<IStudents>(this.urlProvider+id,{headers:{'Authorization':this.jwtheader}\n     return this.http.get<IStudents>(url).pipe(\n      tap(data=>console.log('The data received from backend server for the student fetch by Id srvc:- '+JSON.stringify(data))),\n      catchError(this.handleError)\n\n\n    );\n\n  }\n\n  getStudentsList(): Observable<IStudents[]>{\n   // return this.http.get<IStudents[]>(this.urlProvider,{headers:{'Authorization':this.jwtheader}}).pipe(\n     const url =this.urlProvider+'getAllDetails'\n   return this.http.get<IStudents[]>(url).pipe(\n      tap(data=>console.log('The data received from backend server:- '+JSON.stringify(data))),\n      catchError(this.handleError)\n    );\n  }\n\n   update (student): Observable<IStudents> {\n    const url= this.urlProvider+'updateStudent/'+student.studentId;\n    const headers = new HttpHeaders({ 'Content-Type': 'application/json' });\n    //console.log('Final data to be send :-'+ JSON.stringify(student))\n     return this.http.put<IStudents>(url,student,{ headers }).pipe(\n    tap((student: IStudents) => console.log(`Student Name added ${student.studentId}`)),\n     catchError(this.handleError)\n  );\n}\n\n deleteById(id): Observable<{}>{\n   const url =this.urlProvider+'deleteDetailsById/'+id;\n  return this.http.get<string>(url).pipe(\n    tap((data:string)=> console.log(data)),\n    catchError(this.handleError)\n  );\n}\n\n private handleError(err: HttpErrorResponse) {\n    // in a real world app, we may send the server to some remote logging infrastructure\n    // instead of just logging it to the console\n    let errorMessage = '';\n    if (err.error instanceof ErrorEvent) {\n      // A client-side or network error occurred. Handle it accordingly.\n      errorMessage = `An error occurred: ${err.error.message}`;\n    } else {\n      // The backend returned an unsuccessful response code.\n      // The response body may contain clues as to what went wrong,\n      errorMessage = `Server returned code: ${err.status}, error message is: ${err.message}`;\n    }\n    console.error(errorMessage);\n    return throwError(errorMessage);\n  }\n\n  initializedStudentObject(): IStudents{\n    return {\n      studentId:0,\n      studentName: null,\n      imageUrl:null,\n     studentDOB: null,\n     studentStandard:null,\n     studentDOJ:null,\n     feeGroup: null,\n     studentRating: null,\n      phone: null,\n      notification:null,\n      emailGroup:null\n    }\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}